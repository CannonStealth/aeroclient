{"version":3,"sources":["header/Header.tsx","index.tsx","App.tsx"],"names":["Header","useState","window","innerWidth","logoText","setLogoText","useEffect","addEventListener","className","slice","href","target","rel","ReactDOM","render","StrictMode","document","getElementById","App","hljs","configure","languages","querySelectorAll","forEach","block","highlightBlock","hash","location","element","setImmediate","scrollIntoView","behavior","id","style","opacity","fontSize","paddingTop"],"mappings":"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","file":"static/js/main.27bd97ac.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./header.css\";\n\nfunction Header() {\n    const [logoText, setLogoText] = useState(window.innerWidth < 800 ? \"A\" : \"AeroClient\");\n\n    useEffect(() => {\n        window.addEventListener(\"resize\", function () {\n            setLogoText(window.innerWidth < 800 ? \"A\" : \"AeroClient\");\n        });\n    }, []);\n\n    return (\n        <header className=\"header\">\n            <div className=\"logo-container\">\n                <h1 className=\"logo\">\n                    <span className=\"red\">{logoText.slice(0, 4)}</span>\n                    {logoText.slice(4)}\n                </h1>\n            </div>\n            <nav className=\"nav\">\n                <a\n                    href=\"https://github.com/aero-ware/aeroclient\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    className=\"red\"\n                >\n                    <i className=\"fab fa-github\"></i>\n                </a>\n                <a\n                    href=\"https://www.npmjs.com/package/@aeroware/aeroclient\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    className=\"red\"\n                >\n                    <i className=\"fab fa-npm fa-1x\"></i>\n                </a>\n                <a\n                    href=\"https://discord.gg/JdTQG3a9Ye\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    className=\"red\"\n                >\n                    <i className=\"fab fa-discord\"></i>\n                </a>\n            </nav>\n        </header>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n","import hljs from \"highlight.js\";\nimport React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport \"./docs.css\";\nimport Header from \"./header/Header\";\nimport \"./hl.css\";\nimport \"./sidebar.css\";\n\nfunction App() {\n    useEffect(() => {\n        hljs.configure({\n            languages: [\"typescript\"],\n        });\n\n        document.querySelectorAll(\"pre code\").forEach((block) => {\n            hljs.highlightBlock(block as HTMLElement);\n        });\n\n        const hash = window.location.hash.slice(1);\n\n        const element = document.getElementById(hash);\n\n        if (element)\n            setImmediate(() =>\n                element.scrollIntoView({\n                    behavior: \"smooth\",\n                    block: \"start\",\n                })\n            );\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <Header />\n            <aside className=\"sidebar\">\n                <div className=\"viewport\">\n                    <main className=\"sidebar-links\">\n                        <a href=\"#welcome\">Welcome</a>\n                        <br />\n                        <a href=\"#documentation\">Documentation</a>\n                        <br />\n                        <div className=\"t\">\n                            <a href=\"#aeroclient\">AeroClient</a>\n                            <br />\n                            <div className=\"t\">\n                                <a href=\"#options\">Options</a>\n                                <br />\n                                <a href=\"#properties\">Properties</a>\n                                <br />\n                                <a href=\"#methods\">Methods</a>\n                                <br />\n                                <a href=\"#middleware\">Middleware</a>\n                                <br />\n                            </div>\n                            <a href=\"#command\">Command</a>\n                            <br />\n                            <a href=\"#usage\">Usage</a>\n                            <div className=\"t\">\n                                <a href=\"#commands\">Commands</a>\n                                <br />\n                                <a href=\"#events\">Events</a>\n                                <br />\n                                <a href=\"#messages\">Messages</a>\n                                <br />\n                                <a href=\"#locales\">Cooldowns</a>\n                                <br />\n                                <a href=\"#locales\">Templating</a>\n                                <br />\n                                <a href=\"#locales\">Locales</a>\n                            </div>\n                            <a href=\"#arguments\">Arguments</a>\n                            <div className=\"t\">\n                                <a href=\"#arguments-static\">Static Methods</a>\n                                <br />\n                                <a href=\"#arguments-methods\">Methods</a>\n                                <br />\n                            </div>\n                            <a href=\"#ratelimit\">Ratelimit</a>\n                            <div className=\"t\">\n                                <a href=\"#ratelimit-static\">Static Methods</a>\n                                <br />\n                                <a href=\"#ratelimit-methods\">Methods</a>\n                                <br />\n                            </div>\n                            <a href=\"#aeroembed\">AeroEmbed</a>\n                            <br />\n                            <a href=\"#tipembed\">TipEmbed</a>\n                            <br />\n                            <a href=\"#logger\">Logger</a>\n                            <br />\n                            <div className=\"t\">\n                                <a href=\"#logger-methods\">Methods</a>\n                                <br />\n                            </div>\n                            <a href=\"#utils\">utils</a>\n                            <br />\n                            <div className=\"t\">\n                                <a href=\"#input\">Input</a>\n                                <br />\n                                <a href=\"#parsing\">Parsing</a>\n                                <br />\n                                <a href=\"#timing\">Timing</a>\n                                <br />\n                                <div className=\"t\">\n                                    <a href=\"#stopwatch\">Stopwatch</a>\n                                    <div className=\"t\">\n                                        <a href=\"#stopwatch-properties\">Properties</a>\n                                        <br />\n                                        <a href=\"#stopwatch-methods\">Methods</a>\n                                    </div>\n                                </div>\n                                <a href=\"#pagination\">Pagination</a>\n                                <br />\n                                <div className=\"t\">\n                                    <a href=\"#pagination-options\">Options</a>\n                                </div>\n                            </div>\n                        </div>\n                    </main>\n                </div>\n            </aside>\n            <article className=\"docs\">\n                <div className=\"viewport\">\n                    <div>\n                        <div className=\"welcome\">\n                            <h2>\n                                <a id=\"welcome\" href=\"#welcome\">\n                                    #\n                                </a>{\" \"}\n                                Welcome!\n                            </h2>\n                            <p>\n                                Welcome to the AeroClient v3 documentation.\n                                <br />\n                                <a href=\"#documentation\" className=\"red\">\n                                    Click here skip the welcome section.\n                                </a>\n                            </p>\n                            <h3>About</h3>\n                            <p>\n                                AeroClient is a discord.js framework that focuses on customization.\n                                <br />\n                                It is fully customizable due to the many options and flags you can set.\n                                <br />\n                                AeroClient also features something new in discord.js frameworks: middleware.\n                            </p>\n                            <p>In short, AeroClient is</p>\n                            <ul>\n                                <li>modular;</li>\n                                <li>performant;</li>\n                                <li>flexible;</li>\n                                <li>and easy to use.</li>\n                            </ul>\n                            <p>Also, since AeroClient is written in TypeScript, it provides it's own typings.</p>\n                            <h3>Example (using ES6 import/export)</h3>\n                            <pre>\n                                <code>\n                                    {`\\\nimport AeroClient from \"@aeroware/aeroclient\";\n\n// create a client with default settings and commands\nconst client = new AeroClient({\n    token: \"token\",\n    prefix: \"prefix\",\n    useDefaults: true,\n    logging: true,\n});`}\n                                </code>\n                            </pre>\n                            <br />\n                            <h3>Example (using CommonJS imports)</h3>\n                            <pre>\n                                <code>\n                                    {`\\\nconst AeroClient = require(\"@aeroware/aeroclient\").default;\n\n// create a client with default settings and commands\nconst client = new AeroClient({\n    token: \"token\",\n    prefix: \"prefix\",\n    useDefaults: true,\n    logging: true,\n});`}\n                                </code>\n                            </pre>\n                            <h3>Included Packages</h3>\n                            <p>\n                                <a\n                                    href=\"http://npmjs.com/package/@aeroware/logger\"\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                    className=\"red\"\n                                >\n                                    @aeroware/logger\n                                </a>\n                                <br />\n                                AeroWare's own extremely minimal logging utility.\n                            </p>\n                            <p>\n                                <a\n                                    href=\"http://npmjs.com/package/@aeroware/discord-utils\"\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                    className=\"red\"\n                                >\n                                    @aeroware/discord-utils\n                                </a>\n                                <br />\n                                AeroWare's small package that contains many utilities for discord.js\n                            </p>\n                            <p>\n                                <a href=\"http://npmjs.com/package/date-fns\" target=\"_blank\" rel=\"noreferrer\" className=\"red\">\n                                    date-fns\n                                </a>\n                                <br />A formatting utility for dates and time.\n                            </p>\n                            <p>\n                                <a href=\"http://npmjs.com/package/ms\" target=\"_blank\" rel=\"noreferrer\" className=\"red\">\n                                    ms\n                                </a>\n                                <br />A small utility to convert strings to milliseconds and back.\n                            </p>\n                            <p>\n                                <a href=\"http://npmjs.com/package/keyv\" target=\"_blank\" rel=\"noreferrer\" className=\"red\">\n                                    keyv\n                                </a>\n                                <br />A key-value based in-memory storage that can be persistent.\n                            </p>\n                        </div>\n                        <div className=\"documentation\">\n                            <h2>\n                                <a id=\"documentation\" href=\"#documentation\" className=\"red\">\n                                    #\n                                </a>{\" \"}\n                                Documentation\n                            </h2>\n                            <h3>\n                                <a id=\"aeroclient\" href=\"#aeroclient\" className=\"red\">\n                                    #\n                                </a>{\" \"}\n                                AeroClient\n                            </h3>\n                            <h4>Constructor</h4>\n                            <p>\n                                The constructor takes two arguments: AeroClient options, and{\" \"}\n                                <a href=\"https://discord.js.org/#/docs/main/stable/class/Client\">Client</a> options.\n                                <br />\n                                It's less confusing and easy to manage.\n                            </p>\n                            <pre>\n                                <code>\n                                    {`\\\nnew AeroClient(clientOptions, options);\n`}\n                                </code>\n                            </pre>\n                            <span className=\"red\">@param</span> <code>clientOptions</code> – AeroClient options\n                            <br />\n                            <span className=\"red\">@param</span> <code>options</code> –{\" \"}\n                            <a href=\"https://discord.js.org/#/docs/main/stable/class/Client\">Client</a> options\n                            <p>\n                                AeroClient also has a static factory method to create instances.\n                                <br />\n                                The static method will load any AeroClient configuration files.\n                                <br />\n                                Supported file names are:\n                                <ul>\n                                    <li>\n                                        <code>aeroclient.env</code>\n                                    </li>\n                                    <li>\n                                        <code>aeroclient.conf</code>\n                                    </li>\n                                    <li>\n                                        <code>aeroclient.json</code>\n                                    </li>\n                                    <li>\n                                        <code>aeroclient.config.js</code>\n                                    </li>\n                                    <li>\n                                        <code>aeroclient.config.ts</code>\n                                    </li>\n                                </ul>\n                            </p>\n                            <pre>\n                                <code>\n                                    {`\\\nawait AeroClient.create(clientOptions, options);\n`}\n                                </code>\n                            </pre>\n                            <span className=\"red\">@param</span> <code>clientOptions</code> – AeroClient options\n                            <br />\n                            <span className=\"red\">@param</span> <code>options</code> –{\" \"}\n                            <a href=\"https://discord.js.org/#/docs/main/stable/class/Client\">Client</a> options\n                            <h4 id=\"options\">AeroClientOptions</h4>\n                            <p>\n                                Keep in mind that all of these are <em>optional</em>, but some of them are recommended.\n                            </p>\n                            <ul>\n                                <li>\n                                    <code>token</code> – The client's token\n                                </li>\n                                <li>\n                                    <code>prefix</code> – The client's prefix\n                                </li>\n                                <li>\n                                    <code>logging</code> – Flag to enable logging\n                                </li>\n                                <li>\n                                    <code>loggerHeader</code> – The client's logger's header\n                                </li>\n                                <li>\n                                    <code>loggerShowFlags</code> – Recommended if your terminal doesn't have colors\n                                </li>\n                                <li>\n                                    <code>commandsPath</code> – Path where all your command files are found\n                                </li>\n                                <li>\n                                    <code>eventsPath</code> – Path where all your event files are found\n                                </li>\n                                <li>\n                                    <code>messagesPath</code> – Path where your predefined custom response messages are\n                                </li>\n                                <li>\n                                    <code>languagesPath</code> – Path where your predefined translated messages are\n                                </li>\n                                <li>\n                                    <code>connectionUri</code> – A uri to connect to your database so AeroClient can store data\n                                </li>\n                                <li>\n                                    <code>useDefaults</code> – Flag to enable default commands and settings\n                                </li>\n                                <li>\n                                    <code>persistentCooldowns</code> – Flag to enable persistent cooldowns\n                                </li>\n                                <li>\n                                    <code>disableStaffCooldowns</code> – Flag to disable cooldowns for staff\n                                </li>\n                                <li>\n                                    <code>allowSpaces</code> – Flag to enable whitespace between prefix and command\n                                </li>\n                                <li>\n                                    <code>responses</code> – Response info\n                                </li>\n                                <ul>\n                                    <li>\n                                        <code>cooldown</code> – Reponse to send when the command is on cooldown\n                                    </li>\n                                    <li>\n                                        <code>error</code> – Response to send when an error occurs\n                                    </li>\n                                    <li>\n                                        <code>usage</code> – Response to send when the usage is incorrect\n                                    </li>\n                                    <li>\n                                        <code>nsfw</code> – Response to send when an NSFW command is used in a SFW channel\n                                    </li>\n                                    <li>\n                                        <code>guild</code> – Response to send when a guild only command is used in a direct\n                                        message\n                                    </li>\n                                    <li>\n                                        <code>dm</code> – Response to send when a direct message only command is used in a guild\n                                    </li>\n                                    <li>\n                                        <code>staff</code> – Response to send when a non-staff user attempts to use a staff only\n                                        command\n                                    </li>\n                                    <li>\n                                        <code>test</code> - Response to send when a test server only conmand is attempted to be\n                                        run elsewhere\n                                    </li>\n                                    <li>\n                                        <code>guarded</code> - Response to send when someone attempts to disable a guarded\n                                        command\n                                    </li>\n                                    <li>\n                                        <code>disabled</code> - Response to send when someone attmempts to run a disabled\n                                        command\n                                    </li>\n                                    <li>\n                                        <code>perms</code> - Response to send when someone attempts to run a command but doesn't\n                                        have sufficient permissions\n                                    </li>\n                                    <li>\n                                        <code>ratelimit</code> - Response to send when someone is being ratelimited\n                                    </li>\n                                </ul>\n                                <li>\n                                    <code>staff</code> – Array of strings of staff ids\n                                </li>\n                                <li>\n                                    <code>testServers</code> - Array of strings of test server IDs\n                                </li>\n                                <li>\n                                    <code>dev</code> – Options to for development\n                                </li>\n                                <ul>\n                                    <li>\n                                        <code>dontLoad</code> – Do not load these things into the client.\n                                    </li>\n                                    <ul>\n                                        <li>\n                                            <code>categories</code> – Do not load these categories\n                                        </li>\n                                        <li>\n                                            <code>commands</code> – Do not load these commands\n                                        </li>\n                                        <li>\n                                            <code>events</code> – Do not load these events\n                                        </li>\n                                        <li>\n                                            <code>folders</code> – Do not load these folders\n                                        </li>\n                                    </ul>\n                                    <li>\n                                        <code>eval</code> – Use eval\n                                    </li>\n                                    <ul>\n                                        <li>\n                                            <code>console</code> – Use eval in the console like browser dev tools\n                                        </li>\n                                        <li>\n                                            <code>command</code> – Load an eval command that can only be used by staff and in\n                                            test servers\n                                        </li>\n                                    </ul>\n                                    <li>\n                                        <code>events</code> – Extra events\n                                    </li>\n                                    <ul>\n                                        <li>\n                                            <code>debug</code> – Enable debug event\n                                        </li>\n                                        <li>\n                                            <code>error</code> – Enable error event\n                                        </li>\n                                    </ul>\n                                </ul>\n                                <li>\n                                    <code>customHandler</code> – A callback to use instead of our command handler\n                                </li>\n                                <li>\n                                    <code>readyCallback</code> – A callback to use instead of our ready event callback\n                                </li>\n                            </ul>\n                            <h4>ClientOptions</h4>\n                            <p>\n                                View the discord.js docs{\" \"}\n                                <a href=\"https://discord.js.org/#/docs/main/stable/typedef/ClientOptions\">here</a>.\n                            </p>\n                            <h4 id=\"properties\">Properties</h4>\n                            <ul>\n                                <li>\n                                    <code>commands</code> – Collection of all stored commands\n                                </li>\n                                <li>\n                                    <code>logger</code> – Logger used to log events\n                                </li>\n                                <li>\n                                    <code>prefixes</code> – Keyv that stores prefixes for each guild\n                                </li>\n                                <li>\n                                    <code>clientOptions</code> – The client options that were passed into the constructor\n                                </li>\n                                <li>\n                                    <code>localeStore</code> – Stored locales for each user\n                                </li>\n                                <li>\n                                    <code>locales</code> – Stored translated resopnses\n                                </li>\n                            </ul>\n                            <h4 id=\"methods\">Methods</h4>\n                            <pre>\n                                <code>{`\\\nregisterCommand(command)\n`}</code>\n                            </pre>\n                            <p>\n                                Registers a command object into the client's <code>commands</code> property.\n                            </p>\n                            <span className=\"red\">@param</span> <code>command</code> – Command object to register\n                            <br />\n                            <br />\n                            <br />\n                            <pre>\n                                <code>{`\\\nloadCommands(directory)\n`}</code>\n                            </pre>\n                            <p>Registers all commands in a directory.</p>\n                            <span className=\"red\">@param</span> <code>directory</code> – Directory to load\n                            <br />\n                            <br />\n                            <br />\n                            <pre>\n                                <code>{`\\\nloadEvents(directory)\n`}</code>\n                            </pre>\n                            <p>Registers all events in a directory.</p>\n                            <span className=\"red\">@param</span> <code>directory</code> – Directory to load\n                            <br />\n                            <br />\n                            <br />\n                            <pre>\n                                <code>{`\\\nloadMessages(directory)\n`}</code>\n                            </pre>\n                            <p>Loads a JSON file with the custom messages.</p>\n                            <span className=\"red\">@param</span> <code>path</code> – Path to the JSON file\n                            <br />\n                            <br />\n                            <br />\n                            <pre>\n                                <code>{`\\\nloadLocales(directory)\n`}</code>\n                            </pre>\n                            <p>Registers all locales in a directory.</p>\n                            <span className=\"red\">@param</span> <code>directory</code> – Directory to load\n                            <br />\n                            <br />\n                            <br />\n                            <pre>\n                                <code>{`\\\npaginate(message, pages, options)\n`}</code>\n                            </pre>\n                            <p>\n                                The docs for this method are <a href=\"#pagination\">here</a>.\n                            </p>\n                            <h4 id=\"middleware\">Middleware</h4>\n                            <p>\n                                AeroClient introduces something new in discord.js frameworks.\n                                <br />\n                                This something new is called middleware. If you have used express you may know what it is,\n                                <br />\n                                but if you don't, we will explain.\n                                <br />\n                                Middleware in our framework refers to a function that runs right before command execution.\n                                <br />\n                                They are also is executed in the order you used them, and they change AeroClient's behaviour.\n                            </p>\n                            <p>First, let's see the method to use middleware.</p>\n                            <pre>\n                                <code>{`\\\nuse(middleware)\n`}</code>\n                            </pre>\n                            <p>Applies middleware to the client.</p>\n                            <span className=\"red\">@param</span> <code>middleware</code> – The middleware function\n                            <br />\n                            <p>\n                                The middleware function will get two parameters.\n                                <br />\n                                The first is the context object and the second is a function.\n                            </p>\n                            <pre>\n                                <code>{`\\\nclient.use(({ message }, next, stop) => {\n    if (message.content.includes(\"some bad word\")) {\n        message.reply(\"no u\");\n        return stop();\n    }\n\n    return next();\n});\n`}</code>\n                            </pre>\n                            <p>\n                                The context object has three properties. The message, the arguments for the command, and the\n                                command object itself.\n                                <br />\n                                Note that in the event that a command is not found, <code>command</code> will be undefined.\n                            </p>\n                            <p>\n                                Calling the next function will allow other middleware to execute, like express.\n                                <br />\n                                However, if you call <code>stop</code>, the middleware stops command execution as well.\n                            </p>\n                            <p>\n                                In the above example, if a message contains <code>some bad word</code>, the client will reply{\" \"}\n                                <code>no u</code> and stop command execution.\n                                <br />\n                                This means that even if the user used <code>!help some bad word</code>, the client will not\n                                execute the help command.\n                            </p>\n                            <h3 id=\"command\">The Command type</h3>\n                            <h4>Properties</h4>\n                            <ul>\n                                <li>\n                                    <code>name</code> – Name of the command\n                                </li>\n                                <li>\n                                    <code>aliases</code> – Aliases of the command\n                                </li>\n                                <li>\n                                    <code>category</code> – The command's category\n                                </li>\n                                <li>\n                                    <code>args</code> – If arguments are required\n                                </li>\n                                <li>\n                                    <code>minArgs</code> – Minimum amount of arguments required\n                                </li>\n                                <li>\n                                    <code>maxArgs</code> – Maximum amount of arguments required\n                                </li>\n                                <li>\n                                    <code>usage</code> – The command's usage\n                                </li>\n                                <li>\n                                    <code>cooldown</code> – Cooldown in seconds\n                                </li>\n                                <li>\n                                    <code>serverCooldown</code> – Server cooldown in seconds\n                                </li>\n                                <li>\n                                    <code>metasyntax</code> – <a href=\"#arguments\">Arguments</a> instance to use for validation\n                                    and parsing\n                                </li>\n                                <li>\n                                    <code>ratelimit</code> – <a href=\"#ratelimit\">Ratelimit</a> instance to use for ratelimiting\n                                </li>\n                                <li>\n                                    <code>serverCooldown</code> – Server cooldown in seconds\n                                </li>\n                                <li>\n                                    <code>description</code> – Short description of the command\n                                </li>\n                                <li>\n                                    <code>details</code> – Long description of the command\n                                </li>\n                                <li>\n                                    <code>guildOnly</code> – If the command can only be executed in a guild\n                                </li>\n                                <li>\n                                    <code>staffOnly</code> – If the command can only be executed by staff\n                                </li>\n                                <li>\n                                    <code>testOnly</code> - If the command can only be executed in a test server\n                                </li>\n                                <li>\n                                    <code>dmOnly</code> – If the command can only be executed in a direct message\n                                </li>\n                                <li>\n                                    <code>nsfw</code> – If the command can only be executed in an NSFW channel\n                                </li>\n                                <li>\n                                    <code>hidden</code> – If the command should be hidden from the default help command\n                                </li>\n                                <li>\n                                    <code>guarded</code> - If the command should be protected from being disabled\n                                </li>\n                                <li>\n                                    <code>permissions</code> - Array of{\" \"}\n                                    <a href=\"https://discord.js.org/#/docs/main/stable/class/Permissions?scrollTo=s-FLAGS\">\n                                        PermissionString\n                                    </a>{\" \"}\n                                    that contains the required permissions to run this command.\n                                </li>\n                            </ul>\n                            <h4>Methods</h4>\n                            <pre>\n                                <code>{`\\\ncallback(context)\n`}</code>\n                            </pre>\n                            <p>The callback takes one parameter, the context object. Its properties are listed below.</p>\n                            <ul>\n                                <li>\n                                    <code>message</code> – The message obejct from the message event\n                                </li>\n                                <li>\n                                    <code>args</code> – The arguments for the command\n                                </li>\n                                <li>\n                                    <code>client</code> – The AeroClient instance\n                                </li>\n                                <li>\n                                    <code>text</code> – Full message content\n                                </li>\n                            </ul>\n                            <span className=\"red\">@param</span> <code>context</code> – The context object\n                            <br />\n                            <h3 id=\"usage\">Usage</h3>\n                            <h4 id=\"commands\">Commands</h4>\n                            <p>\n                                AeroClient supports two ways for declaring commands.\n                                <br />\n                                The first way we shall look at is <code>client.registerCommand</code>\n                            </p>\n                            <pre>\n                                <code>{`\\\nclient.registerCommand({\n    name: \"hello\",\n    callback({ message }) {\n        message.reply(\"hi!\");\n    }\n})\n`}</code>\n                            </pre>\n                            <p>You can also wrap it in a function and export it from another file.</p>\n                            <pre>\n                                <code>{`\\\nmodule.exports = (client) => {\n    client.registerCommand({\n        name: \"hello\",\n        callback({ message }) {\n            message.reply(\"hi!\");\n        }\n    })\n}\n`}</code>\n                            </pre>\n                            <p>Or export the command object itself.</p>\n                            <pre>\n                                <code>{`\\\nmodule.exports = {\n    name: \"hello\",\n    callback({ message }) {\n        message.reply(\"hi!\");\n    }\n}\n`}</code>\n                            </pre>\n                            <p>Generally the second method is preferred since it is more concise.</p>\n                            <h4 id=\"events\">Events</h4>\n                            <p>AeroClient also supports individual event files.</p>\n                            <p>In each file, there should be one export. An example is show below.</p>\n                            <pre>\n                                <code>{`\\\nmodule.exports = {\n    name: \"guildMemberAdd\",\n    once: false,\n    callback(member) {\n        member.user.send(\"hello\");\n    }\n}\n`}</code>\n                            </pre>\n                            <p>\n                                There are three properties. The name, whether it should execute once or every time it is\n                                emitted, and finally, the callback to execute.\n                            </p>\n                            <h4 id=\"messages\">Messages</h4>\n                            <p>AeroClient allows you to configure response messages with a JSON file.</p>\n                            <p>\n                                Simple add the path to the JSON file in as the <code>messagesPath</code> option.\n                            </p>\n                            <h4 id=\"locales\">Cancel cooldowns</h4>\n                            <p>\n                                Sometimes you don't want the cooldown to be set. A common situation is when a user messes up\n                                their arguments and you tell them to try again.\n                                <br />\n                                But the cooldown will be set, and they have to wait.\n                                <br />\n                                To give a better experience, AeroClient has a feature to cancel the cooldown.\n                                <br />\n                                Simple return the string <code>\"invalid\"</code>, and AeroClient will not set the cooldown.\n                                <pre>\n                                    <code>{`\\\nif (args[0] !== \"something\") {\n    message.channel.send(\"The first argument has to be \\`something\\`!\");\n    return \"invalid\";\n}\n`}</code>\n                                </pre>\n                            </p>\n                            <h4 id=\"locales\">Response templates</h4>\n                            <p>\n                                For responses, there are <strong>templates</strong>.\n                                <br />\n                                Templates allow you to output dynamic responses.\n                                <br />\n                                Example:\n                                <pre>\n                                    <code>\n                                        {`\\\n// Hey, you need to wait 1 second to execute help!\nHey, you need to wait $TIME to execute $COMMAND!\n`}\n                                    </code>\n                                </pre>\n                                All responses have a <code>COMMAND</code> template.\n                                <br />\n                                Some responses have special templates.\n                                <br />\n                                The cooldown response, for example, has a <code>TIME</code> template for how much time is left\n                                on the cooldown.\n                                <br />\n                                For a full list of the templates, see this{\" \"}\n                                <a\n                                    href=\"https://discord.com/channels/804819758775533588/805552166236192819/808706336044220447\"\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                >\n                                    FAQ\n                                </a>\n                                .\n                            </p>\n                            <h4 id=\"locales\">Locales and translated responses</h4>\n                            <p>\n                                AeroClient supports a number of locales.\n                                <br />\n                                Your translated messages should be contained in a JSON file with the locale as the name.\n                                <br />\n                                For example, a JSON file with French translations would be named <code>fr.json</code>\n                                .\n                                <br />\n                                AeroClient will automatically load all support locales if you add the <code>\n                                    languagesPath\n                                </code>{\" \"}\n                                option.\n                                <br />\n                                AeroClient supports the following locales: <code>ar, en, fr, zh, de, pt, ru, es</code>\n                            </p>\n                            <h3 id=\"arguments\">Arguments</h3>\n                            <p>\n                                Arguments is a powerful class used to parse and validate command arguments.\n                                <br />\n                                The Arguments class employs a kind of{\" \"}\n                                <a href=\"https://en.wikipedia.org/wiki/Metasyntax\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                    metasyntax\n                                </a>{\" \"}\n                                to compile templates.\n                                <br />\n                                Example syntax is as follows:\n                                <pre>\n                                    <code>{`\\\n<user|role> [duration]\n`}</code>\n                                </pre>\n                                <ul>\n                                    <li>\n                                        Arguments wrapped in <code>{`<>`}</code> are <strong>required.</strong>\n                                    </li>\n                                    <li>\n                                        Arguments wrapped in <code>{`[]`}</code> are <strong>optional.</strong>\n                                    </li>\n                                    <li>\n                                        <code>{`|`}</code> represents the <strong>or</strong> operator.\n                                    </li>\n                                </ul>\n                                <p>These are the supported types:</p>\n                                <ul>\n                                    <li>\n                                        <code>member</code> – Mention or ID\n                                    </li>\n                                    <li>\n                                        <code>user</code> – Mention or ID\n                                    </li>\n                                    <li>\n                                        <code>role</code> – Mention or ID\n                                    </li>\n                                    <li>\n                                        <code>channel</code> – Mention or ID\n                                    </li>\n                                    <li>\n                                        <code>number</code> – A float\n                                    </li>\n                                    <li>\n                                        <code>integer</code> – An integer\n                                    </li>\n                                    <li>\n                                        <code>string</code> – Any string\n                                    </li>\n                                    <li>\n                                        <code>boolean</code> – A boolean word (true/false, on/off, etc)\n                                    </li>\n                                    <li>\n                                        <code>duration</code> – A duration of time\n                                    </li>\n                                    <li>\n                                        <code>date</code> – A specific date\n                                    </li>\n                                    <li>\n                                        <code>literals</code> – A literal string (wrapped in ' or \")\n                                    </li>\n                                </ul>\n                            </p>\n                            <h4>Constructor</h4>\n                            <p>\n                                Please do not use the constructor directly.\n                                <br />\n                                If you are, consider using <code>Arguments.from</code> instead.\n                            </p>\n                            <h4 id=\"arguments-static\">Static methods</h4>\n                            <pre>\n                                <code>{`\\\nuse(client)\n`}</code>\n                            </pre>\n                            <p>Allows the Arguments class to use the Discord API.</p>\n                            <span className=\"red\">@param</span> <code>client</code> – An AeroClient to use for the Discord API\n                            <br />\n                            <pre>\n                                <code>{`\\\ncompile(metasyntax, legend)\n`}</code>\n                            </pre>\n                            <p>\n                                Compiles metasyntax into an Argument instance.\n                                <br />\n                                Example:\n                            </p>\n                            <pre>\n                                <code>{`\\\n/**\n * Equivalent to 'Arguments.compile(\"<user> <date>\")', \n * but may look nicer in some cases.\n */\n\nconst argumentRegex = Arguments.compile(\"<person> <date>\", {\n    person: \"user\",\n}); \n`}</code>{\" \"}\n                            </pre>\n                            <span className=\"red\">@param</span> <code>metasyntax</code> – The metasyntax to compile\n                            <br />\n                            <span className=\"red\">@param</span> <code>legend</code> – An object with type aliases\n                            <br />\n                            <pre>\n                                <code>{`\\\nfrom(lexicon)\n`}</code>\n                            </pre>\n                            <p>\n                                Create an Arguments instance directly from a lexicon.\n                                <br />\n                                This method is not supported and is simply a better alternative to the constructor.\n                            </p>\n                            <span className=\"red\">@param</span> <code>lexicon</code> – Lexicon to use\n                            <br />\n                            <h4 id=\"arguments-methods\">Methods</h4>\n                            <pre>\n                                <code>{`\\\ntest(message, args)\n`}</code>\n                            </pre>\n                            <p>\n                                Tests the given arguments for validity. <br />\n                                Keep in mind that this is asynchronous.\n                            </p>\n                            <span className=\"red\">@param</span> <code>message</code> – Message for context\n                            <br />\n                            <span className=\"red\">@param</span> <code>args</code> – Command arguments\n                            <br />\n                            <pre>\n                                <code>{`\\\nparse(message, args)\n`}</code>\n                            </pre>\n                            <p>\n                                Parses the given arguments into objects. Arguments unable to be parsed will be undefined\n                                instead.\n                                <br /> Keep in mind that this is asynchronous.\n                            </p>\n                            <span className=\"red\">@param</span> <code>message</code> – Message for context\n                            <br />\n                            <span className=\"red\">@param</span> <code>args</code> – Command arguments\n                            <br />\n                            <h3 id=\"ratelimit\">Ratelimit</h3>\n                            <p>\n                                Ratelimit is a class that represents a ratelimit.\n                                <br />\n                                It is primarily useful if you don't want a simple cooldown, but rather a ratelimit.\n                                <br />\n                                Ratelimit has an extremely simple API for managing your ratelimits.\n                            </p>\n                            <h4>Constructor</h4>\n                            <p>\n                                Please do not use the constructor directly.\n                                <br />\n                                If you are, consider using <code>Ratelimit.create</code> instead.\n                            </p>\n                            <h4 id=\"ratelimit-static\">Static methods</h4>\n                            <pre>\n                                <code>{`\\\ncreate(options)\n`}</code>\n                            </pre>\n                            <p>Creates a ratelimit.</p>\n                            <span className=\"red\">@param</span> <code>options</code> – Options to configure the instance\n                            <br />\n                            <p>\n                                Ratelimit options are:\n                                <ul>\n                                    <li>\n                                        <code>calls</code> – Number of calls\n                                    </li>\n                                    <li>\n                                        <code>per</code> – Time span (\"second\", \"minute\", \"hour\", \"day\")\n                                    </li>\n                                    <li>\n                                        <code>clear</code> – Clear calls every interval instead\n                                    </li>\n                                    <li>\n                                        <code>recharge</code> – Cooldown time until ratelimit is active again\n                                    </li>\n                                </ul>\n                            </p>\n                            <h4 id=\"ratelimit-methods\">Methods</h4>\n                            <pre>\n                                <code>{`\\\nadd(id)\n`}</code>\n                            </pre>\n                            <p>Increments the calls for an ID</p>\n                            <span className=\"red\">@param</span> <code>id</code> – ID to add\n                            <br />\n                            <pre>\n                                <code>{`\\\nremove(id)\n`}</code>\n                            </pre>\n                            <p>Decrements the calls for an ID</p>\n                            <span className=\"red\">@param</span> <code>id</code> – ID to remove\n                            <br />\n                            <pre>\n                                <code>{`\\\ncheck(id)\n`}</code>\n                            </pre>\n                            <p>Checks if the ID is being ratelimited</p>\n                            <span className=\"red\">@param</span> <code>id</code> – ID to check\n                            <br />\n                            <h3 id=\"aeroembed\">AeroEmbed</h3>\n                            <p>\n                                AeroEmbed is just a wrapper for{\" \"}\n                                <a\n                                    href=\"https://discord.js.org/#/docs/main/stable/class/MessageEmbed\"\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                >\n                                    MessageEmbed\n                                </a>{\" \"}\n                                with some extra methods.\n                            </p>\n                            <h4>Methods</h4>\n                            <pre>\n                                <code>{`\\\nblank(inline)\n`}</code>\n                            </pre>\n                            <p>Adds a blank field.</p>\n                            <span className=\"red\">@param</span> <code>inline</code> – Should the blank field be inline?\n                            <br />\n                            <pre>\n                                <code>{`\\\ntwoByTwo(data, spaceOut)\n`}</code>\n                            </pre>\n                            <p>Creates a 2×2 grid layout.</p>\n                            <span className=\"red\">@param</span> <code>data</code> – Data for the layout.\n                            <br />\n                            <span className=\"red\">@param</span> <code>spaceOut</code> – Should the grid be spaced out?\n                            <br />\n                            <pre>\n                                <code>{`\\\nthreeByThree(data)\n`}</code>\n                            </pre>\n                            <p>Creates a 3×3 grid layout.</p>\n                            <span className=\"red\">@param</span> <code>data</code> – Data for the layout.\n                            <br />\n                            <pre>\n                                <code>{`\\\ncss(css)\n`}</code>\n                            </pre>\n                            <p>Styles the embed with EmbedCSS [BETA]</p>\n                            <span className=\"red\">@param</span> <code>css</code>\n                             – EmbedCSS to style the embed.\n                            <br />\n                            <h3 id=\"tipembed\">TipEmbed</h3>\n                            <p>\n                                TipEmbed isn't a class, but a function.\n                                <br />\n                                Like AeroEmbed, it is a wrapper for{\" \"}\n                                <a\n                                    href=\"https://discord.js.org/#/docs/main/stable/class/MessageEmbed\"\n                                    target=\"_blank\"\n                                    rel=\"noreferrer\"\n                                >\n                                    MessageEmbed\n                                </a>\n                                .\n                                <br />\n                                TipEmbed is for embeds that display small tips (and maybe easter eggs) in their footers.\n                            </p>\n                            <pre>\n                                <code>{`\\\nTipEmbed(tips, options)\n`}</code>\n                            </pre>\n                            <p>Dynamically creates a TipEmbed class.</p>\n                            <span className=\"red\">@param</span> <code>tips</code> – Tips to display\n                            <br />\n                            <span className=\"red\">@param</span> <code>options</code> – Options for the class.\n                            <br />\n                            <ul>\n                                <li>\n                                    <code>color</code> – Color of the embed\n                                </li>\n                                <li>\n                                    <code>timestamps</code> – Should the timestamp be set?\n                                </li>\n                                <li>\n                                    <code>easterEggs</code> – Option for easter eggs\n                                    <br />\n                                    <ul>\n                                        <li>\n                                            <code>eggs</code> – All the easter eggs to show\n                                        </li>\n                                        <li>\n                                            <code>chance</code> – Chance of getting an easter egg\n                                        </li>\n                                    </ul>\n                                </li>\n                            </ul>\n                            <h3 id=\"logger\">Logger</h3>\n                            <p>\n                                The Logger class is a simple logger that can be configured easily.\n                                <br />\n                                Logger instances only have methods and do not have properties.\n                            </p>\n                            <h4>Constructor</h4>\n                            <pre>\n                                <code>{`\\\nnew Logger(header, showFlags)\n`}</code>\n                            </pre>\n                            <span className=\"red\">@param</span> <code>header</code> – Custom header for the logger. Defaults to{\" \"}\n                            <code>logger</code>.<br />\n                            <span className=\"red\">@param</span> <code>showFlags</code> – Flag to show flags or not.\n                            <h4 id=\"logger-methods\">Methods</h4>\n                            <pre>\n                                <code>{`\\\nsuccess(message)\n`}</code>\n                            </pre>\n                            <p>Logs a message in green.</p>\n                            <span className=\"red\">@param</span> <code>message</code> – Message to log\n                            <br />\n                            <pre>\n                                <code>{`\\\ninfo(message)\n`}</code>\n                            </pre>\n                            <p>Logs a message in blue.</p>\n                            <span className=\"red\">@param</span> <code>message</code> – Message to log\n                            <br />\n                            <pre>\n                                <code>{`\\\nwarn(message)\n`}</code>\n                            </pre>\n                            <p>Logs a message in yellow.</p>\n                            <span className=\"red\">@param</span> <code>message</code> – Message to log\n                            <br />\n                            <pre>\n                                <code>{`\\\nerror(message)\n`}</code>\n                            </pre>\n                            <p>Logs a message in red.</p>\n                            <span className=\"red\">@param</span> <code>message</code> – Message to log\n                            <br />\n                            <h2 id=\"utils\">utils</h2>\n                            <h3 id=\"input\">Input</h3>\n                            <pre>\n                                <code>{`\\\nutils.getReply(message, options)\n`}</code>\n                            </pre>\n                            <p>Helper method for getting text input.</p>\n                            <span className=\"red\">@param</span> <code>message</code> – Message object\n                            <br />\n                            <span className=\"red\">@param</span> <code>options</code> – Options for the method\n                            <br />\n                            <ul>\n                                <li>\n                                    <code>time</code> – Time limit for answers\n                                </li>\n                                <li>\n                                    <code>user</code> – Specific user to accept answers from\n                                </li>\n                                <li>\n                                    <code>keywords</code> – Array of strings for acceptable answers\n                                </li>\n                                <li>\n                                    <code>regex</code> – Regular expression to test answers\n                                </li>\n                            </ul>\n                            <pre>\n                                <code>{`\\\nutils.getReaction()\n`}</code>\n                            </pre>\n                            <p>Helper method for getting reaction input.</p>\n                            <span className=\"red\">@param</span> <code>message</code> – Message object\n                            <br />\n                            <span className=\"red\">@param</span> <code>options</code> – Options for the method\n                            <br />\n                            <ul>\n                                <li>\n                                    <code>time</code> – Time limit for answers\n                                </li>\n                                <li>\n                                    <code>user</code> – Specific user to accept answers from\n                                </li>\n                            </ul>\n                            <h3 id=\"parsing\">Parsing</h3>\n                            <pre>\n                                <code>{`\\\nutils.formatMacroCase(str)\n`}</code>\n                            </pre>\n                            <p>Converts macro case strings to a more readable string.</p>\n                            <span className=\"red\">@param</span> <code>string</code> – String to format\n                            <br />\n                            <pre>\n                                <code>{`\\\nutils.formatList(items)\n`}</code>\n                            </pre>\n                            <p>Converts an array of strings into a more readable string.</p>\n                            <span className=\"red\">@param</span> <code>items</code> – Array to format\n                            <br />\n                            <pre>\n                                <code>{`\\\nutils.parseUsers(message, args)\n`}</code>\n                            </pre>\n                            <p>Gets user objects from command arguments.</p>\n                            <span className=\"red\">@param</span> <code>message</code> – Message object\n                            <br />\n                            <span className=\"red\">@param</span> <code>args</code> – Command arguments\n                            <br />\n                            <pre>\n                                <code>{`\\\nutils.parseMembers(message, args)\n`}</code>\n                            </pre>\n                            <p>Gets member objects from command arguments.</p>\n                            <span className=\"red\">@param</span> <code>message</code> – Message object\n                            <br />\n                            <span className=\"red\">@param</span> <code>args</code> – Command arguments\n                            <br />\n                            <pre>\n                                <code>{`\\\nutils.parseRoles(message, args)\n`}</code>\n                            </pre>\n                            <p>Gets role objects from command arguments.</p>\n                            <span className=\"red\">@param</span> <code>message</code> – Message object\n                            <br />\n                            <span className=\"red\">@param</span> <code>args</code> – Command arguments\n                            <br />\n                            <pre>\n                                <code>{`\\\nutils.trim(str, length)\n`}</code>\n                            </pre>\n                            <p>\n                                Trims a string to the specified length and replaces the last three characters with a ellipsis.\n                            </p>\n                            <span className=\"red\">@param</span> <code>str</code> – String to trim\n                            <br />\n                            <span className=\"red\">@param</span> <code>length</code> – Max length of the string\n                            <br />\n                            <h3 id=\"timing\">Timing</h3>\n                            <pre>\n                                <code>{`\\\nutils.aDelayOf(ms)\n`}</code>\n                            </pre>\n                            <p>\n                                Waits for a set amount of millliseconds, then continues execution. Only works with{\" \"}\n                                <code>await</code>.\n                            </p>\n                            <span className=\"red\">@param</span> <code>message</code> – Message object\n                            <br />\n                            <pre>\n                                <code>{`\\\nutils.getStopwatch()\n`}</code>\n                            </pre>\n                            <p>Creates a stopwatch object for use.</p>\n                            <h3 id=\"stopwatch\">Stopwatch</h3>\n                            <h4 id=\"stopwatch-properties\">Properties</h4>\n                            <ul>\n                                <li>\n                                    <code>elapsedTime</code> – Elapsed time from when the stopwatch started\n                                </li>\n                                <li>\n                                    <code>isRunning</code> – If the stopwatch is running or not\n                                </li>\n                            </ul>\n                            <h4 id=\"stopwatch-methods\">Methods</h4>\n                            <pre>\n                                <code>{`\\\nstart()\n`}</code>\n                            </pre>\n                            <p>Starts the stopwatch.</p>\n                            <pre>\n                                <code>{`\\\nstop()\n`}</code>\n                            </pre>\n                            <p>Stops the stopwatch.</p>\n                            <pre>\n                                <code>{`\\\nreset()\n`}</code>\n                            </pre>\n                            <p>Reset the stopwatch.</p>\n                            <pre>\n                                <code>{`\\\nrestart()\n`}</code>\n                            </pre>\n                            <p>Restarts the stopwatch.</p>\n                            <h4 id=\"pagination\">Pagination</h4>\n                            <pre>\n                                <code>{`\\\nutils.paginate(message, pages, options)\n`}</code>\n                            </pre>\n                            <p>Starts a pagination.</p>\n                            <span className=\"red\">@param</span> <code>message</code> – Message object\n                            <br />\n                            <span className=\"red\">@param</span> <code>pages</code> – Array of{\" \"}\n                            <a href=\"https://discord.js.org/#/docs/main/stable/class/MessageEmbed\">MessageEmbed</a> instances\n                            <br />\n                            <span className=\"red\">@param</span> <code>options</code> – Options for the pagination\n                            <br />\n                            <p id=\"pagination-options\">The options are:</p>\n                            <ul>\n                                <li>\n                                    <code>startingPage</code> – The page to show when pagination is first displayed\n                                </li>\n                                <li>\n                                    <code>time</code> – Time in milliseconds to show the pagination\n                                </li>\n                                <li>\n                                    <code>fastForwardAndRewind</code> – Enables two extra features with options\n                                    <ul>\n                                        <li>\n                                            <code>time</code> – Time in milliseconds to accept answers\n                                        </li>\n                                        <li>\n                                            <code>rewindPrompt</code> – Custom prompt to ask when rewinding\n                                        </li>\n                                        <li>\n                                            <code>fastForwardPrompt</code> – Custom prompt to ask when fast forwarding\n                                        </li>\n                                    </ul>\n                                </li>\n                                <li>\n                                    <code>goTo</code> – Enables an extra feature with options\n                                    <ul>\n                                        <li>\n                                            <code>time</code> – Time in milliseconds to accept answers\n                                        </li>\n                                        <li>\n                                            <code>prompt</code> – Custom prompt to ask\n                                        </li>\n                                    </ul>\n                                </li>\n                            </ul>\n                        </div>\n                        <div\n                            className=\"footer\"\n                            id=\"footer\"\n                            style={{\n                                opacity: 0.5,\n                                fontSize: \"1rem\",\n                                paddingTop: \"2rem\",\n                            }}\n                        >\n                            Copyright 2021 &copy; AeroWare\n                        </div>\n                    </div>\n                </div>\n            </article>\n        </div>\n    );\n}\n\nexport default App;\n"],"sourceRoot":""}