{"version":3,"sources":["header/Header.tsx","index.tsx","App.tsx"],"names":["Header","useState","window","innerWidth","logoText","setLogoText","useEffect","addEventListener","className","slice","href","target","rel","ReactDOM","render","StrictMode","document","getElementById","App","hljs","configure","languages","querySelectorAll","forEach","block","highlightBlock","hash","location","element","setImmediate","scrollIntoView","behavior","id","style","opacity","fontSize","paddingTop"],"mappings":"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","file":"static/js/main.79182995.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./header.css\";\r\n\r\nfunction Header() {\r\n    const [logoText, setLogoText] = useState(window.innerWidth < 800 ? \"A\" : \"AeroClient\");\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", function () {\r\n            setLogoText(window.innerWidth < 800 ? \"A\" : \"AeroClient\");\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"logo-container\">\r\n                <h1 className=\"logo\">\r\n                    <span className=\"red\">{logoText.slice(0, 4)}</span>\r\n                    {logoText.slice(4)}\r\n                </h1>\r\n            </div>\r\n            <nav className=\"nav\">\r\n                <a\r\n                    href=\"https://github.com/aero-ware/aeroclient\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    className=\"red\"\r\n                >\r\n                    <i className=\"fab fa-github\"></i>\r\n                </a>\r\n                <a\r\n                    href=\"https://www.npmjs.com/package/@aeroware/aeroclient\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    className=\"red\"\r\n                >\r\n                    <i className=\"fab fa-npm fa-1x\"></i>\r\n                </a>\r\n                <a\r\n                    href=\"https://discord.gg/JdTQG3a9Ye\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    className=\"red\"\r\n                >\r\n                    <i className=\"fab fa-discord\"></i>\r\n                </a>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n","import hljs from \"highlight.js\";\r\nimport React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport \"./docs.css\";\r\nimport Header from \"./header/Header\";\r\nimport \"./hl.css\";\r\nimport \"./sidebar.css\";\r\n\r\nfunction App() {\r\n    useEffect(() => {\r\n        hljs.configure({\r\n            languages: [\"typescript\"],\r\n        });\r\n\r\n        document.querySelectorAll(\"pre code\").forEach((block) => {\r\n            hljs.highlightBlock(block as HTMLElement);\r\n        });\r\n\r\n        const hash = window.location.hash.slice(1);\r\n\r\n        const element = document.getElementById(hash);\r\n\r\n        if (element)\r\n            setImmediate(() =>\r\n                element.scrollIntoView({\r\n                    behavior: \"smooth\",\r\n                    block: \"start\",\r\n                })\r\n            );\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header />\r\n            <aside className=\"sidebar\">\r\n                <div className=\"viewport\">\r\n                    <main className=\"sidebar-links\">\r\n                        <a href=\"#welcome\">Welcome</a>\r\n                        <br />\r\n                        <a href=\"#documentation\">Documentation</a>\r\n                        <br />\r\n                        <div className=\"t\">\r\n                            <a href=\"#aeroclient\">AeroClient</a>\r\n                            <br />\r\n                            <div className=\"t\">\r\n                                <a href=\"#options\">Options</a>\r\n                                <br />\r\n                                <a href=\"#properties\">Properties</a>\r\n                                <br />\r\n                                <a href=\"#methods\">Methods</a>\r\n                                <br />\r\n                                <a href=\"#middleware\">Middleware</a>\r\n                                <br />\r\n                            </div>\r\n                            <a href=\"#command\">Command</a>\r\n                            <br />\r\n                            <a href=\"#usage\">Usage</a>\r\n                            <div className=\"t\">\r\n                                <a href=\"#commands\">Commands</a>\r\n                                <br />\r\n                                <a href=\"#events\">Events</a>\r\n                                <br />\r\n                                <a href=\"#messages\">Messages</a>\r\n                                <br />\r\n                                <a href=\"#locales\">Cooldowns</a>\r\n                                <br />\r\n                                <a href=\"#locales\">Templating</a>\r\n                                <br />\r\n                                <a href=\"#locales\">Locales</a>\r\n                            </div>\r\n                            <a href=\"#arguments\">Arguments</a>\r\n                            <div className=\"t\">\r\n                                <a href=\"#arguments-static\">Static Methods</a>\r\n                                <br />\r\n                                <a href=\"#arguments-methods\">Methods</a>\r\n                                <br />\r\n                            </div>\r\n                            <a href=\"#aeroembed\">AeroEmbed</a>\r\n                            <br />\r\n                            <a href=\"#tipembed\">TipEmbed</a>\r\n                            <br />\r\n                            <a href=\"#logger\">Logger</a>\r\n                            <br />\r\n                            <div className=\"t\">\r\n                                <a href=\"#logger-methods\">Methods</a>\r\n                                <br />\r\n                            </div>\r\n                            <a href=\"#utils\">utils</a>\r\n                            <br />\r\n                            <div className=\"t\">\r\n                                <a href=\"#input\">Input</a>\r\n                                <br />\r\n                                <a href=\"#parsing\">Parsing</a>\r\n                                <br />\r\n                                <a href=\"#timing\">Timing</a>\r\n                                <br />\r\n                                <div className=\"t\">\r\n                                    <a href=\"#stopwatch\">Stopwatch</a>\r\n                                    <div className=\"t\">\r\n                                        <a href=\"#stopwatch-properties\">\r\n                                            Properties\r\n                                        </a>\r\n                                        <br />\r\n                                        <a href=\"#stopwatch-methods\">Methods</a>\r\n                                    </div>\r\n                                </div>\r\n                                <a href=\"#pagination\">Pagination</a>\r\n                                <br />\r\n                                <div className=\"t\">\r\n                                    <a href=\"#pagination-options\">Options</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </div>\r\n            </aside>\r\n            <article className=\"docs\">\r\n                <div className=\"viewport\">\r\n                    <div>\r\n                        <div className=\"welcome\">\r\n                            <h2>\r\n                                <a id=\"welcome\" href=\"#welcome\">\r\n                                    #\r\n                                </a>{\" \"}\r\n                                Welcome!\r\n                            </h2>\r\n                            <p>\r\n                                Welcome to the AeroClient v2 documentation.\r\n                                <br />\r\n                                <a href=\"#documentation\" className=\"red\">\r\n                                    Click here skip the welcome section.\r\n                                </a>\r\n                            </p>\r\n                            <h3>About</h3>\r\n                            <p>\r\n                                AeroClient is a discord.js framework that\r\n                                focuses on customization.\r\n                                <br />\r\n                                It is fully customizable due to the many options\r\n                                and flags you can set.\r\n                                <br />\r\n                                AeroClient also features something new in\r\n                                discord.js frameworks: middleware.\r\n                            </p>\r\n                            <p>In short, AeroClient is</p>\r\n                            <ul>\r\n                                <li>modular;</li>\r\n                                <li>performant;</li>\r\n                                <li>flexible;</li>\r\n                                <li>and easy to use.</li>\r\n                            </ul>\r\n                            <p>\r\n                                Also, since AeroClient is written in TypeScript,\r\n                                it provides it's own typings.\r\n                            </p>\r\n                            <h3>Example (using ES6 import/export)</h3>\r\n                            <pre>\r\n                                <code>\r\n                                    {`\\\r\nimport AeroClient from \"@aeroware/aeroclient\";\r\n\r\n// create a client with default settings and commands\r\nconst client = new AeroClient({\r\n    token: \"token\",\r\n    prefix: \"prefix\",\r\n    useDefaults: true,\r\n    logging: true,\r\n});`}\r\n                                </code>\r\n                            </pre>\r\n                            <br />\r\n                            <h3>Example (using CommonJS imports)</h3>\r\n                            <pre>\r\n                                <code>\r\n                                    {`\\\r\nconst AeroClient = require(\"@aeroware/aeroclient\").default;\r\n\r\n// create a client with default settings and commands\r\nconst client = new AeroClient({\r\n    token: \"token\",\r\n    prefix: \"prefix\",\r\n    useDefaults: true,\r\n    logging: true,\r\n});`}\r\n                                </code>\r\n                            </pre>\r\n                            <h3>Included Packages</h3>\r\n                            <p>\r\n                                <a\r\n                                    href=\"http://npmjs.com/package/@aeroware/logger\"\r\n                                    target=\"_blank\"\r\n                                    rel=\"noreferrer\"\r\n                                    className=\"red\"\r\n                                >\r\n                                    @aeroware/logger\r\n                                </a>\r\n                                <br />\r\n                                AeroWare's own extremely minimal logging\r\n                                utility.\r\n                            </p>\r\n                            <p>\r\n                                <a\r\n                                    href=\"http://npmjs.com/package/@aeroware/discord-utils\"\r\n                                    target=\"_blank\"\r\n                                    rel=\"noreferrer\"\r\n                                    className=\"red\"\r\n                                >\r\n                                    @aeroware/discord-utils\r\n                                </a>\r\n                                <br />\r\n                                AeroWare's small package that contains many\r\n                                utilities for discord.js\r\n                            </p>\r\n                            <p>\r\n                                <a\r\n                                    href=\"http://npmjs.com/package/date-fns\"\r\n                                    target=\"_blank\"\r\n                                    rel=\"noreferrer\"\r\n                                    className=\"red\"\r\n                                >\r\n                                    date-fns\r\n                                </a>\r\n                                <br />A formatting utility for dates and time.\r\n                            </p>\r\n                            <p>\r\n                                <a\r\n                                    href=\"http://npmjs.com/package/ms\"\r\n                                    target=\"_blank\"\r\n                                    rel=\"noreferrer\"\r\n                                    className=\"red\"\r\n                                >\r\n                                    ms\r\n                                </a>\r\n                                <br />A small utility to convert strings to\r\n                                milliseconds and back.\r\n                            </p>\r\n                            <p>\r\n                                <a\r\n                                    href=\"http://npmjs.com/package/keyv\"\r\n                                    target=\"_blank\"\r\n                                    rel=\"noreferrer\"\r\n                                    className=\"red\"\r\n                                >\r\n                                    keyv\r\n                                </a>\r\n                                <br />A key-value based in-memory storage that\r\n                                can be persistent.\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"documentation\">\r\n                            <h2>\r\n                                <a\r\n                                    id=\"documentation\"\r\n                                    href=\"#documentation\"\r\n                                    className=\"red\"\r\n                                >\r\n                                    #\r\n                                </a>{\" \"}\r\n                                Documentation\r\n                            </h2>\r\n                            <h3>\r\n                                <a\r\n                                    id=\"aeroclient\"\r\n                                    href=\"#aeroclient\"\r\n                                    className=\"red\"\r\n                                >\r\n                                    #\r\n                                </a>{\" \"}\r\n                                AeroClient\r\n                            </h3>\r\n                            <h4>Constructor</h4>\r\n                            <p>\r\n                                The constructor takes two arguments: AeroClient\r\n                                options, and{\" \"}\r\n                                <a href=\"https://discord.js.org/#/docs/main/stable/class/Client\">\r\n                                    Client\r\n                                </a>{\" \"}\r\n                                options.\r\n                                <br />\r\n                                It's less confusing and easy to manage.\r\n                            </p>\r\n                            <pre>\r\n                                <code>\r\n                                    {`\\\r\nnew AeroClient(clientOptions, options);\r\n`}\r\n                                </code>\r\n                            </pre>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>clientOptions</code> – AeroClient options\r\n                            <br />\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>options</code> –{\" \"}\r\n                            <a href=\"https://discord.js.org/#/docs/main/stable/class/Client\">\r\n                                Client\r\n                            </a>{\" \"}\r\n                            options\r\n                            <h4 id=\"options\">AeroClientOptions</h4>\r\n                            <p>\r\n                                Keep in mind that all of these are{\" \"}\r\n                                <em>optional</em>, but some of them are\r\n                                recommended.\r\n                            </p>\r\n                            <ul>\r\n                                <li>\r\n                                    <code>token</code> – The client's token\r\n                                </li>\r\n                                <li>\r\n                                    <code>prefix</code> – The client's prefix\r\n                                </li>\r\n                                <li>\r\n                                    <code>logging</code> – Flag to enable\r\n                                    logging\r\n                                </li>\r\n                                <li>\r\n                                    <code>loggerHeader</code> – The client's\r\n                                    logger's header\r\n                                </li>\r\n                                <li>\r\n                                    <code>loggerShowFlags</code> – Recommended\r\n                                    if your terminal doesn't have colors\r\n                                </li>\r\n                                <li>\r\n                                    <code>commandsPath</code> – Path where all\r\n                                    your command files are found\r\n                                </li>\r\n                                <li>\r\n                                    <code>eventsPath</code> – Path where all\r\n                                    your event files are found\r\n                                </li>\r\n                                <li>\r\n                                    <code>messagesPath</code> – Path where your\r\n                                    predefined custom response messages are\r\n                                </li>\r\n                                <li>\r\n                                    <code>languagesPath</code> – Path where your\r\n                                    predefined translated messages are\r\n                                </li>\r\n                                <li>\r\n                                    <code>connectionUri</code> – A uri to\r\n                                    connect to your database so AeroClient can\r\n                                    store data\r\n                                </li>\r\n                                <li>\r\n                                    <code>useDefaults</code> – Flag to enable\r\n                                    default commands and settings\r\n                                </li>\r\n                                <li>\r\n                                    <code>persistentCooldowns</code> – Flag to\r\n                                    enable persistent cooldowns\r\n                                </li>\r\n                                <li>\r\n                                    <code>disableStaffCooldowns</code> – Flag to\r\n                                    disable cooldowns for staff\r\n                                </li>\r\n                                <li>\r\n                                    <code>allowSpaces</code> – Flag to enable\r\n                                    whitespace between prefix and command\r\n                                </li>\r\n                                <li>\r\n                                    <code>responses</code> – Response info\r\n                                </li>\r\n                                <ul>\r\n                                    <li>\r\n                                        <code>cooldown</code> – Reponse to send\r\n                                        when the command is on cooldown\r\n                                    </li>\r\n                                    <li>\r\n                                        <code>error</code> – Response to send\r\n                                        when an error occurs\r\n                                    </li>\r\n                                    <li>\r\n                                        <code>usage</code> – Response to send\r\n                                        when the usage is incorrect\r\n                                    </li>\r\n                                    <li>\r\n                                        <code>nsfw</code> – Response to send\r\n                                        when an NSFW command is used in a SFW\r\n                                        channel\r\n                                    </li>\r\n                                    <li>\r\n                                        <code>guild</code> – Response to send\r\n                                        when a guild only command is used in a\r\n                                        direct message\r\n                                    </li>\r\n                                    <li>\r\n                                        <code>dm</code> – Response to send when\r\n                                        a direct message only command is used in\r\n                                        a guild\r\n                                    </li>\r\n                                    <li>\r\n                                        <code>staff</code> – Response to send\r\n                                        when a non-staff user attempts to use a\r\n                                        staff only command\r\n                                    </li>\r\n                                    <li>\r\n                                        <code>test</code> - Response to send\r\n                                        when a test server only conmand is\r\n                                        attempted to be run elsewhere\r\n                                    </li>\r\n                                    <li>\r\n                                        <code>guarded</code> - Response to send\r\n                                        when someone attempts to disable a\r\n                                        guarded command\r\n                                    </li>\r\n                                    <li>\r\n                                        <code>disabled</code> - Response to send\r\n                                        when someone attmempts to run a disabled\r\n                                        command\r\n                                    </li>\r\n                                    <li>\r\n                                        <code>perms</code> - Response to send\r\n                                        when someone attempts to run a command\r\n                                        but doesn't have sufficient permissions\r\n                                    </li>\r\n                                </ul>\r\n                                <li>\r\n                                    <code>staff</code> – Array of strings of\r\n                                    staff ids\r\n                                </li>\r\n                                <li>\r\n                                    <code>testServers</code> - Array of strings\r\n                                    of test server IDs\r\n                                </li>\r\n                                <li>\r\n                                    <code>customHandler</code> – A callback to\r\n                                    use instead of our command handler\r\n                                </li>\r\n                                <li>\r\n                                    <code>readyCallback</code> – A callback to\r\n                                    use instead of our ready event callback\r\n                                </li>\r\n                            </ul>\r\n                            <h4>ClientOptions</h4>\r\n                            <p>\r\n                                View the discord.js docs{\" \"}\r\n                                <a href=\"https://discord.js.org/#/docs/main/stable/typedef/ClientOptions\">\r\n                                    here\r\n                                </a>\r\n                                .\r\n                            </p>\r\n                            <h4 id=\"properties\">Properties</h4>\r\n                            <ul>\r\n                                <li>\r\n                                    <code>commands</code> – Collection of all\r\n                                    stored commands\r\n                                </li>\r\n                                <li>\r\n                                    <code>logger</code> – Logger used to log\r\n                                    events\r\n                                </li>\r\n                                <li>\r\n                                    <code>prefixes</code> – Keyv that stores\r\n                                    prefixes for each guild\r\n                                </li>\r\n                                <li>\r\n                                    <code>clientOptions</code> – The client\r\n                                    options that were passed into the\r\n                                    constructor\r\n                                </li>\r\n                                <li>\r\n                                    <code>localeStore</code> – Stored locales\r\n                                    for each user\r\n                                </li>\r\n                                <li>\r\n                                    <code>locales</code> – Stored translated\r\n                                    resopnses\r\n                                </li>\r\n                            </ul>\r\n                            <h4 id=\"methods\">Methods</h4>\r\n                            <pre>\r\n                                <code>{`\\\r\nregisterCommand(command)\r\n`}</code>\r\n                            </pre>\r\n                            <p>\r\n                                Registers a command object into the client's{\" \"}\r\n                                <code>commands</code> property.\r\n                            </p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>command</code> – Command object to register\r\n                            <br />\r\n                            <br />\r\n                            <br />\r\n                            <pre>\r\n                                <code>{`\\\r\nloadCommands(directory)\r\n`}</code>\r\n                            </pre>\r\n                            <p>Registers all commands in a directory.</p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>directory</code> – Directory to load\r\n                            <br />\r\n                            <br />\r\n                            <br />\r\n                            <pre>\r\n                                <code>{`\\\r\nloadEvents(directory)\r\n`}</code>\r\n                            </pre>\r\n                            <p>Registers all events in a directory.</p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>directory</code> – Directory to load\r\n                            <br />\r\n                            <br />\r\n                            <br />\r\n                            <pre>\r\n                                <code>{`\\\r\nloadMessages(directory)\r\n`}</code>\r\n                            </pre>\r\n                            <p>Loads a JSON file with the custom messages.</p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>path</code> – Path to the JSON file\r\n                            <br />\r\n                            <br />\r\n                            <br />\r\n                            <pre>\r\n                                <code>{`\\\r\nloadLocales(directory)\r\n`}</code>\r\n                            </pre>\r\n                            <p>Registers all locales in a directory.</p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>directory</code> – Directory to load\r\n                            <br />\r\n                            <br />\r\n                            <br />\r\n                            <pre>\r\n                                <code>{`\\\r\npaginate(message, pages, options)\r\n`}</code>\r\n                            </pre>\r\n                            <p>\r\n                                The docs for this method are{\" \"}\r\n                                <a href=\"#pagination\">here</a>.\r\n                            </p>\r\n                            <h4 id=\"middleware\">Middleware</h4>\r\n                            <p>\r\n                                AeroClient introduces something new in\r\n                                discord.js frameworks.\r\n                                <br />\r\n                                This something new is called middleware. If you\r\n                                have used express you may know what it is,\r\n                                <br />\r\n                                but if you don't, we will explain.\r\n                                <br />\r\n                                Middleware in our framework refers to a function\r\n                                that runs right before command execution.\r\n                                <br />\r\n                                They are also is executed in the order you used\r\n                                them, and they change AeroClient's behaviour.\r\n                            </p>\r\n                            <p>\r\n                                First, let's see the method to use middleware.\r\n                            </p>\r\n                            <pre>\r\n                                <code>{`\\\r\nuse(middleware)\r\n`}</code>\r\n                            </pre>\r\n                            <p>Applies middleware to the client.</p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>middleware</code> – The middleware function\r\n                            <br />\r\n                            <p>\r\n                                The middleware function will get two parameters.\r\n                                <br />\r\n                                The first is the context object and the second\r\n                                is a function.\r\n                            </p>\r\n                            <pre>\r\n                                <code>{`\\\r\nclient.use(({ message }, next, stop) => {\r\n    if (message.content.includes(\"some bad word\")) {\r\n        message.reply(\"no u\");\r\n        return stop();\r\n    }\r\n\r\n    return next();\r\n});\r\n`}</code>\r\n                            </pre>\r\n                            <p>\r\n                                The context object has three properties. The\r\n                                message, the arguments for the command, and the\r\n                                command object itself.\r\n                                <br />\r\n                                Note that in the event that a command is not\r\n                                found, <code>command</code> will be undefined.\r\n                            </p>\r\n                            <p>\r\n                                Calling the next function will allow other\r\n                                middleware to execute, like express.\r\n                                <br />\r\n                                However, if you call <code>stop</code>, the\r\n                                middleware stops command execution as well.\r\n                            </p>\r\n                            <p>\r\n                                In the above example, if a message contains{\" \"}\r\n                                <code>some bad word</code>, the client will\r\n                                reply <code>no u</code> and stop command\r\n                                execution.\r\n                                <br />\r\n                                This means that even if the user used{\" \"}\r\n                                <code>!help some bad word</code>, the client\r\n                                will not execute the help command.\r\n                            </p>\r\n                            <h3 id=\"command\">The Command type</h3>\r\n                            <h4>Properties</h4>\r\n                            <ul>\r\n                                <li>\r\n                                    <code>name</code> – Name of the command\r\n                                </li>\r\n                                <li>\r\n                                    <code>aliases</code> – Aliases of the\r\n                                    command\r\n                                </li>\r\n                                <li>\r\n                                    <code>category</code> – The command's\r\n                                    category\r\n                                </li>\r\n                                <li>\r\n                                    <code>args</code> – If arguments are\r\n                                    required\r\n                                </li>\r\n                                <li>\r\n                                    <code>minArgs</code> – Minimum amount of\r\n                                    arguments required\r\n                                </li>\r\n                                <li>\r\n                                    <code>maxArgs</code> – Maximum amount of\r\n                                    arguments required\r\n                                </li>\r\n                                <li>\r\n                                    <code>usage</code> – The command's usage\r\n                                </li>\r\n                                <li>\r\n                                    <code>cooldown</code> – Cooldown in seconds\r\n                                </li>\r\n                                <li>\r\n                                    <code>description</code> – Short description\r\n                                    of the command\r\n                                </li>\r\n                                <li>\r\n                                    <code>details</code> – Long description of\r\n                                    the command\r\n                                </li>\r\n                                <li>\r\n                                    <code>guildOnly</code> – If the command can\r\n                                    only be executed in a guild\r\n                                </li>\r\n                                <li>\r\n                                    <code>staffOnly</code> – If the command can\r\n                                    only be executed by staff\r\n                                </li>\r\n                                <li>\r\n                                    <code>testOnly</code> - If the command can\r\n                                    only be executed in a test server\r\n                                </li>\r\n                                <li>\r\n                                    <code>dmOnly</code> – If the command can\r\n                                    only be executed in a direct message\r\n                                </li>\r\n                                <li>\r\n                                    <code>nsfw</code> – If the command can only\r\n                                    be executed in an NSFW channel\r\n                                </li>\r\n                                <li>\r\n                                    <code>hidden</code> – If the command should\r\n                                    be hidden from the default help command\r\n                                </li>\r\n                                <li>\r\n                                    <code>guarded</code> - If the command should\r\n                                    be protected from being disabled\r\n                                </li>\r\n                                <li>\r\n                                    <code>permissions</code> - Array of{\" \"}\r\n                                    <a href=\"https://discord.js.org/#/docs/main/stable/class/Permissions?scrollTo=s-FLAGS\">\r\n                                        PermissionString\r\n                                    </a>{\" \"}\r\n                                    that contains the required permissions to\r\n                                    run this command. Not checked if command is\r\n                                    run in DMs.\r\n                                </li>\r\n                            </ul>\r\n                            <h4>Methods</h4>\r\n                            <pre>\r\n                                <code>{`\\\r\ncallback(context)\r\n`}</code>\r\n                            </pre>\r\n                            <p>\r\n                                The callback takes one parameter, the context\r\n                                object. Its properties are listed below.\r\n                            </p>\r\n                            <ul>\r\n                                <li>\r\n                                    <code>message</code> – The message obejct\r\n                                    from the message event\r\n                                </li>\r\n                                <li>\r\n                                    <code>args</code> – The arguments for the\r\n                                    command\r\n                                </li>\r\n                                <li>\r\n                                    <code>client</code> – The AeroClient\r\n                                    instance\r\n                                </li>\r\n                                <li>\r\n                                    <code>text</code> – Full message content\r\n                                </li>\r\n                            </ul>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>context</code> – The context object\r\n                            <br />\r\n                            <h3 id=\"usage\">Usage</h3>\r\n                            <h4 id=\"commands\">Commands</h4>\r\n                            <p>\r\n                                AeroClient supports two ways for declaring\r\n                                commands.\r\n                                <br />\r\n                                The first way we shall look at is{\" \"}\r\n                                <code>client.registerCommand</code>\r\n                            </p>\r\n                            <pre>\r\n                                <code>{`\\\r\nclient.registerCommand({\r\n    name: \"hello\",\r\n    callback({ message }) {\r\n        message.reply(\"hi!\");\r\n    }\r\n})\r\n`}</code>\r\n                            </pre>\r\n                            <p>\r\n                                You can also wrap it in a function and export it\r\n                                from another file.\r\n                            </p>\r\n                            <pre>\r\n                                <code>{`\\\r\nmodule.exports = (client) => {\r\n    client.registerCommand({\r\n        name: \"hello\",\r\n        callback({ message }) {\r\n            message.reply(\"hi!\");\r\n        }\r\n    })\r\n}\r\n`}</code>\r\n                            </pre>\r\n                            <p>Or export the command object itself.</p>\r\n                            <pre>\r\n                                <code>{`\\\r\nmodule.exports = {\r\n    name: \"hello\",\r\n    callback({ message }) {\r\n        message.reply(\"hi!\");\r\n    }\r\n}\r\n`}</code>\r\n                            </pre>\r\n                            <p>\r\n                                Generally the second method is preferred since\r\n                                it is more concise.\r\n                            </p>\r\n                            <h4 id=\"events\">Events</h4>\r\n                            <p>\r\n                                AeroClient also supports individual event files.\r\n                            </p>\r\n                            <p>\r\n                                In each file, there should be one export. An\r\n                                example is show below.\r\n                            </p>\r\n                            <pre>\r\n                                <code>{`\\\r\nmodule.exports = {\r\n    name: \"guildMemberAdd\",\r\n    once: false,\r\n    callback(member) {\r\n        member.user.send(\"hello\");\r\n    }\r\n}\r\n`}</code>\r\n                            </pre>\r\n                            <p>\r\n                                There are three properties. The name, whether it\r\n                                should execute once or every time it is emitted,\r\n                                and finally, the callback to execute.\r\n                            </p>\r\n                            <h4 id=\"messages\">Messages</h4>\r\n                            <p>\r\n                                AeroClient allows you to configure response\r\n                                messages with a JSON file.\r\n                            </p>\r\n                            <p>\r\n                                Simple add the path to the JSON file in as the{\" \"}\r\n                                <code>messagesPath</code> option.\r\n                            </p>\r\n                            <h4 id=\"locales\">Cancel cooldowns</h4>\r\n                            <p>\r\n                                Sometimes you don't want the cooldown to be set.\r\n                                A common situation is when a user messes up\r\n                                their arguments and you tell them to try again.\r\n                                <br />\r\n                                But the cooldown will be set, and they have to\r\n                                wait.\r\n                                <br />\r\n                                To give a better experience, AeroClient has a\r\n                                feature to cancel the cooldown.\r\n                                <br />\r\n                                Simple return the string <code>\"invalid\"</code>,\r\n                                and AeroClient will not set the cooldown.\r\n                                <pre>\r\n                                    <code>{`\\\r\nif (args[0] !== \"something\") {\r\n    message.channel.send(\"The first argument has to be \\`something\\`!\");\r\n    return \"invalid\";\r\n}\r\n`}</code>\r\n                                </pre>\r\n                            </p>\r\n                            <h4 id=\"locales\">Response templates</h4>\r\n                            <p>\r\n                                For responses, there are{\" \"}\r\n                                <strong>templates</strong>.\r\n                                <br />\r\n                                Templates allow you to output dynamic responses.\r\n                                <br />\r\n                                Example:\r\n                                <pre>\r\n                                    <code>\r\n                                        {`\\\r\n// Hey, you need to wait 1 second to execute help!\r\nHey, you need to wait $TIME to execute $COMMAND!\r\n`}\r\n                                    </code>\r\n                                </pre>\r\n                                All responses have a <code>COMMAND</code>{\" \"}\r\n                                template.\r\n                                <br />\r\n                                Some responses have special templates.\r\n                                <br />\r\n                                The cooldown response, for example, has a{\" \"}\r\n                                <code>TIME</code> template for how much time is\r\n                                left on the cooldown.\r\n                                <br />\r\n                                For a full list of the templates, see this{\" \"}\r\n                                <a\r\n                                    href=\"https://discord.com/channels/804819758775533588/805552166236192819/808706336044220447\"\r\n                                    target=\"_blank\"\r\n                                    rel=\"noreferrer\"\r\n                                >\r\n                                    FAQ\r\n                                </a>\r\n                                .\r\n                            </p>\r\n                            <h4 id=\"locales\">\r\n                                Locales and translated responses\r\n                            </h4>\r\n                            <p>\r\n                                AeroClient supports a number of locales.\r\n                                <br />\r\n                                Your translated messages should be contained in\r\n                                a JSON file with the locale as the name.\r\n                                <br />\r\n                                For example, a JSON file with French\r\n                                translations would be named <code>fr.json</code>\r\n                                .\r\n                                <br />\r\n                                AeroClient will automatically load all support\r\n                                locales if you add the{\" \"}\r\n                                <code>languagesPath</code> option.\r\n                                <br />\r\n                                AeroClient supports the following locales:{\" \"}\r\n                                <code>ar, en, fr, zh, de, pt, ru, es</code>\r\n                            </p>\r\n                            <h3 id=\"arguments\">Arguments</h3>\r\n                            <p>\r\n                                Arguments is a powerful class used to parse and\r\n                                validate command arguments.\r\n                                <br />\r\n                                The Arguments class employs a kind of{\" \"}\r\n                                <a\r\n                                    href=\"https://en.wikipedia.org/wiki/Metasyntax\"\r\n                                    target=\"_blank\"\r\n                                    rel=\"noopener noreferrer\"\r\n                                >\r\n                                    metasyntax\r\n                                </a>{\" \"}\r\n                                to compile templates.\r\n                                <br />\r\n                                Example syntax is as follows:\r\n                                <pre>\r\n                                    <code>{`\\\r\n<user|role> [duration]\r\n`}</code>\r\n                                </pre>\r\n                                <ul>\r\n                                    <li>\r\n                                        Arguments wrapped in <code>{`<>`}</code>{\" \"}\r\n                                        are <strong>required.</strong>\r\n                                    </li>\r\n                                    <li>\r\n                                        Arguments wrapped in <code>{`[]`}</code>{\" \"}\r\n                                        are <strong>optional.</strong>\r\n                                    </li>\r\n                                    <li>\r\n                                        <code>{`|`}</code> represents the{\" \"}\r\n                                        <strong>or</strong> operator.\r\n                                    </li>\r\n                                </ul>\r\n                            </p>\r\n                            <h4>Constructor</h4>\r\n                            <p>\r\n                                Please do not use the constructor directly.\r\n                                <br />\r\n                                If you are, consider using{\" \"}\r\n                                <code>Arguments.from</code> instead.\r\n                            </p>\r\n                            <h4 id=\"arguments-static\">Static methods</h4>\r\n                            <pre>\r\n                                <code>{`\\\r\nuse(client)\r\n`}</code>\r\n                            </pre>\r\n                            <p>\r\n                                Allows the Arguments class to use the Discord\r\n                                API.\r\n                            </p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>client</code> – An AeroClient to use for the\r\n                            Discord API.\r\n                            <br />\r\n                            <pre>\r\n                                <code>{`\\\r\ncompile(metasyntax, legend)\r\n`}</code>\r\n                            </pre>\r\n                            <p>\r\n                                Compiles metasyntax into an Argument instance.\r\n                                <br />\r\n                                Example:\r\n                            </p>\r\n                            <pre>\r\n                                <code>{`\\\r\n/**\r\n * Equivalent to 'Arguments.compile(\"<user> <date>\")', \r\n * but may look nicer in some cases.\r\n */\r\n\r\nconst argumentRegex = Arguments.compile(\"<person> <date>\", {\r\n    person: \"user\",\r\n}); \r\n`}</code>{\" \"}\r\n                            </pre>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>metasyntax</code> – The metasyntax to compile.\r\n                            <br />\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>legend</code> – An object with type aliases.\r\n                            <br />\r\n                            <pre>\r\n                                <code>{`\\\r\nfrom(lexicon)\r\n`}</code>\r\n                            </pre>\r\n                            <p>\r\n                                Create an Arguments instance directly from a\r\n                                lexicon.\r\n                                <br />\r\n                                This method is not supported and is simply a\r\n                                better alternative to the constructor.\r\n                            </p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>lexicon</code> – Lexicon to use.\r\n                            <br />\r\n                            <h4 id=\"arguments-methods\">Methods</h4>\r\n                            <pre>\r\n                                <code>{`\\\r\ntest(message, args)\r\n`}</code>\r\n                            </pre>\r\n                            <p>\r\n                                Tests the given arguments for validity. <br />\r\n                                Keep in mind that this is asynchronous.\r\n                            </p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>message</code> – Message for context.\r\n                            <br />\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>args</code> – Command arguments\r\n                            <br />\r\n                            <pre>\r\n                                <code>{`\\\r\nparse(message, args)\r\n`}</code>\r\n                            </pre>\r\n                            <p>\r\n                                Parses the given arguments into objects.\r\n                                Arguments unable to be parsed will be undefined\r\n                                instead.\r\n                                <br /> Keep in mind that this is asynchronous.\r\n                            </p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>message</code> – Message for context.\r\n                            <br />\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>args</code> – Command arguments\r\n                            <br />\r\n                            <h3 id=\"aeroembed\">AeroEmbed</h3>\r\n                            <p>\r\n                                AeroEmbed is just a wrapper for{\" \"}\r\n                                <a\r\n                                    href=\"https://discord.js.org/#/docs/main/stable/class/MessageEmbed\"\r\n                                    target=\"_blank\"\r\n                                    rel=\"noreferrer\"\r\n                                >\r\n                                    MessageEmbed\r\n                                </a>{\" \"}\r\n                                with some extra methods.\r\n                            </p>\r\n                            <h4>Methods</h4>\r\n                            <pre>\r\n                                <code>{`\\\r\nblank(inline)\r\n`}</code>\r\n                            </pre>\r\n                            <p>Adds a blank field.</p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>inline</code> – Should the blank field be\r\n                            inline?\r\n                            <br />\r\n                            <pre>\r\n                                <code>{`\\\r\ntwoByTwo(data, spaceOut)\r\n`}</code>\r\n                            </pre>\r\n                            <p>Creates a 2×2 grid layout.</p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>data</code> – Data for the layout.\r\n                            <br />\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>spaceOut</code> – Should the grid be spaced\r\n                            out?\r\n                            <br />\r\n                            <pre>\r\n                                <code>{`\\\r\nthreeByThree(data)\r\n`}</code>\r\n                            </pre>\r\n                            <p>Creates a 3×3 grid layout.</p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>data</code> – Data for the layout.\r\n                            <br />\r\n                            <pre>\r\n                                <code>{`\\\r\ncss(css)\r\n`}</code>\r\n                            </pre>\r\n                            <p>Styles the embed with EmbedCSS [BETA]</p>\r\n                            <span className=\"red\">@param</span> <code>css</code>\r\n                             – EmbedCSS to style the embed.\r\n                            <br />\r\n                            <h3 id=\"tipembed\">TipEmbed</h3>\r\n                            <p>\r\n                                TipEmbed isn't a class, but a function.\r\n                                <br />\r\n                                Like AeroEmbed, it is a wrapper for{\" \"}\r\n                                <a\r\n                                    href=\"https://discord.js.org/#/docs/main/stable/class/MessageEmbed\"\r\n                                    target=\"_blank\"\r\n                                    rel=\"noreferrer\"\r\n                                >\r\n                                    MessageEmbed\r\n                                </a>\r\n                                .\r\n                                <br />\r\n                                TipEmbed is for embeds that display small tips\r\n                                (and maybe easter eggs) in their footers.\r\n                            </p>\r\n                            <pre>\r\n                                <code>{`\\\r\nTipEmbed(tips, options)\r\n`}</code>\r\n                            </pre>\r\n                            <p>Dynamically creates a TipEmbed class.</p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>tips</code> – Tips to display\r\n                            <br />\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>options</code> – Options for the class.\r\n                            <br />\r\n                            <ul>\r\n                                <li>\r\n                                    <code>color</code> – Color of the embed\r\n                                </li>\r\n                                <li>\r\n                                    <code>timestamps</code> – Should the\r\n                                    timestamp be set?\r\n                                </li>\r\n                                <li>\r\n                                    <code>easterEggs</code> – Option for easter\r\n                                    eggs\r\n                                    <br />\r\n                                    <ul>\r\n                                        <li>\r\n                                            <code>eggs</code> – All the easter\r\n                                            eggs to show\r\n                                        </li>\r\n                                        <li>\r\n                                            <code>chance</code> – Chance of\r\n                                            getting an easter egg\r\n                                        </li>\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>\r\n                            <h3 id=\"logger\">Logger</h3>\r\n                            <p>\r\n                                The Logger class is a simple logger that can be\r\n                                configured easily.\r\n                                <br />\r\n                                Logger instances only have methods and do not\r\n                                have properties.\r\n                            </p>\r\n                            <h4>Constructor</h4>\r\n                            <pre>\r\n                                <code>{`\\\r\nnew Logger(header, showFlags)\r\n`}</code>\r\n                            </pre>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>header</code> – Custom header for the logger.\r\n                            Defaults to <code>logger</code>.<br />\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>showFlags</code> – Flag to show flags or not.\r\n                            <h4 id=\"logger-methods\">Methods</h4>\r\n                            <pre>\r\n                                <code>{`\\\r\nsuccess(message)\r\n`}</code>\r\n                            </pre>\r\n                            <p>Logs a message in green.</p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>message</code> – Message to log\r\n                            <br />\r\n                            <pre>\r\n                                <code>{`\\\r\ninfo(message)\r\n`}</code>\r\n                            </pre>\r\n                            <p>Logs a message in blue.</p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>message</code> – Message to log\r\n                            <br />\r\n                            <pre>\r\n                                <code>{`\\\r\nwarn(message)\r\n`}</code>\r\n                            </pre>\r\n                            <p>Logs a message in yellow.</p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>message</code> – Message to log\r\n                            <br />\r\n                            <pre>\r\n                                <code>{`\\\r\nerror(message)\r\n`}</code>\r\n                            </pre>\r\n                            <p>Logs a message in red.</p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>message</code> – Message to log\r\n                            <br />\r\n                            <h2 id=\"utils\">utils</h2>\r\n                            <h3 id=\"input\">Input</h3>\r\n                            <pre>\r\n                                <code>{`\\\r\nutils.getReply(message, options)\r\n`}</code>\r\n                            </pre>\r\n                            <p>Helper method for getting text input.</p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>message</code> – Message object\r\n                            <br />\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>options</code> – Options for the method\r\n                            <br />\r\n                            <ul>\r\n                                <li>\r\n                                    <code>time</code> – Time limit for answers\r\n                                </li>\r\n                                <li>\r\n                                    <code>user</code> – Specific user to accept\r\n                                    answers from\r\n                                </li>\r\n                                <li>\r\n                                    <code>keywords</code> – Array of strings for\r\n                                    acceptable answers\r\n                                </li>\r\n                                <li>\r\n                                    <code>regex</code> – Regular expression to\r\n                                    test answers\r\n                                </li>\r\n                            </ul>\r\n                            <pre>\r\n                                <code>{`\\\r\nutils.getReaction()\r\n`}</code>\r\n                            </pre>\r\n                            <p>Helper method for getting reaction input.</p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>message</code> – Message object\r\n                            <br />\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>options</code> – Options for the method\r\n                            <br />\r\n                            <ul>\r\n                                <li>\r\n                                    <code>time</code> – Time limit for answers\r\n                                </li>\r\n                                <li>\r\n                                    <code>user</code> – Specific user to accept\r\n                                    answers from\r\n                                </li>\r\n                            </ul>\r\n                            <h3 id=\"parsing\">Parsing</h3>\r\n                            <pre>\r\n                                <code>{`\\\r\nutils.formatMacroCase(str)\r\n`}</code>\r\n                            </pre>\r\n                            <p>\r\n                                Converts macro case strings to a more readable\r\n                                string.\r\n                            </p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>string</code> – String to format\r\n                            <br />\r\n                            <pre>\r\n                                <code>{`\\\r\nutils.formatList(items)\r\n`}</code>\r\n                            </pre>\r\n                            <p>\r\n                                Converts an array of strings into a more\r\n                                readable string.\r\n                            </p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>items</code> – Array to format\r\n                            <br />\r\n                            <pre>\r\n                                <code>{`\\\r\nutils.parseUsers(message, args)\r\n`}</code>\r\n                            </pre>\r\n                            <p>Gets user objects from command arguments.</p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>message</code> – Message object\r\n                            <br />\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>args</code> – Command arguments\r\n                            <br />\r\n                            <pre>\r\n                                <code>{`\\\r\nutils.parseMembers(message, args)\r\n`}</code>\r\n                            </pre>\r\n                            <p>Gets member objects from command arguments.</p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>message</code> – Message object\r\n                            <br />\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>args</code> – Command arguments\r\n                            <br />\r\n                            <pre>\r\n                                <code>{`\\\r\nutils.parseRoles(message, args)\r\n`}</code>\r\n                            </pre>\r\n                            <p>Gets role objects from command arguments.</p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>message</code> – Message object\r\n                            <br />\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>args</code> – Command arguments\r\n                            <br />\r\n                            <pre>\r\n                                <code>{`\\\r\nutils.trim(str, length)\r\n`}</code>\r\n                            </pre>\r\n                            <p>\r\n                                Trims a string to the specified length and\r\n                                replaces the last three characters with a\r\n                                ellipsis.\r\n                            </p>\r\n                            <span className=\"red\">@param</span> <code>str</code>{\" \"}\r\n                            – String to trim\r\n                            <br />\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>length</code> – Max length of the string\r\n                            <br />\r\n                            <h3 id=\"timing\">Timing</h3>\r\n                            <pre>\r\n                                <code>{`\\\r\nutils.aDelayOf(ms)\r\n`}</code>\r\n                            </pre>\r\n                            <p>\r\n                                Waits for a set amount of millliseconds, then\r\n                                continues execution. Only works with{\" \"}\r\n                                <code>await</code>.\r\n                            </p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>message</code> – Message object\r\n                            <br />\r\n                            <pre>\r\n                                <code>{`\\\r\nutils.getStopwatch()\r\n`}</code>\r\n                            </pre>\r\n                            <p>Creates a stopwatch object for use.</p>\r\n                            <h3 id=\"stopwatch\">Stopwatch</h3>\r\n                            <h4 id=\"stopwatch-properties\">Properties</h4>\r\n                            <ul>\r\n                                <li>\r\n                                    <code>elapsedTime</code> – Elapsed time from\r\n                                    when the stopwatch started\r\n                                </li>\r\n                                <li>\r\n                                    <code>isRunning</code> – If the stopwatch is\r\n                                    running or not\r\n                                </li>\r\n                            </ul>\r\n                            <h4 id=\"stopwatch-methods\">Methods</h4>\r\n                            <pre>\r\n                                <code>{`\\\r\nstart()\r\n`}</code>\r\n                            </pre>\r\n                            <p>Starts the stopwatch.</p>\r\n                            <pre>\r\n                                <code>{`\\\r\nstop()\r\n`}</code>\r\n                            </pre>\r\n                            <p>Stops the stopwatch.</p>\r\n                            <pre>\r\n                                <code>{`\\\r\nreset()\r\n`}</code>\r\n                            </pre>\r\n                            <p>Reset the stopwatch.</p>\r\n                            <pre>\r\n                                <code>{`\\\r\nrestart()\r\n`}</code>\r\n                            </pre>\r\n                            <p>Restarts the stopwatch.</p>\r\n                            <h4 id=\"pagination\">Pagination</h4>\r\n                            <pre>\r\n                                <code>{`\\\r\nutils.paginate(message, pages, options)\r\n`}</code>\r\n                            </pre>\r\n                            <p>Starts a pagination.</p>\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>message</code> – Message object\r\n                            <br />\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>pages</code> – Array of{\" \"}\r\n                            <a href=\"https://discord.js.org/#/docs/main/stable/class/MessageEmbed\">\r\n                                MessageEmbed\r\n                            </a>{\" \"}\r\n                            instances\r\n                            <br />\r\n                            <span className=\"red\">@param</span>{\" \"}\r\n                            <code>options</code> – Options for the pagination\r\n                            <br />\r\n                            <p id=\"pagination-options\">The options are:</p>\r\n                            <ul>\r\n                                <li>\r\n                                    <code>startingPage</code> – The page to show\r\n                                    when pagination is first displayed\r\n                                </li>\r\n                                <li>\r\n                                    <code>time</code> – Time in milliseconds to\r\n                                    show the pagination\r\n                                </li>\r\n                                <li>\r\n                                    <code>fastForwardAndRewind</code> – Enables\r\n                                    two extra features with options\r\n                                    <ul>\r\n                                        <li>\r\n                                            <code>time</code> – Time in\r\n                                            milliseconds to accept answers\r\n                                        </li>\r\n                                        <li>\r\n                                            <code>rewindPrompt</code> – Custom\r\n                                            prompt to ask when rewinding\r\n                                        </li>\r\n                                        <li>\r\n                                            <code>fastForwardPrompt</code>{\" \"}\r\n                                            – Custom prompt to ask when fast\r\n                                            forwarding\r\n                                        </li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li>\r\n                                    <code>goTo</code> – Enables an extra feature\r\n                                    with options\r\n                                    <ul>\r\n                                        <li>\r\n                                            <code>time</code> – Time in\r\n                                            milliseconds to accept answers\r\n                                        </li>\r\n                                        <li>\r\n                                            <code>prompt</code> – Custom prompt\r\n                                            to ask\r\n                                        </li>\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div\r\n                            className=\"footer\"\r\n                            id=\"footer\"\r\n                            style={{\r\n                                opacity: 0.5,\r\n                                fontSize: \"1rem\",\r\n                                paddingTop: \"2rem\",\r\n                            }}\r\n                        >\r\n                            Copyright 2021 &copy; AeroWare\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </article>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"sourceRoot":""}