{"version":3,"sources":["header/Header.tsx","index.tsx","App.tsx"],"names":["Header","useState","window","innerWidth","logoText","setLogoText","useEffect","addEventListener","className","slice","href","target","rel","ReactDOM","render","StrictMode","document","getElementById","App","hljs","configure","languages","querySelectorAll","forEach","block","highlightBlock","hash","location","element","setImmediate","scrollIntoView","behavior","id","style","opacity","fontSize","paddingTop"],"mappings":"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","file":"static/js/main.8a250d4e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./header.css\";\n\nfunction Header() {\n    const [logoText, setLogoText] = useState(window.innerWidth < 800 ? \"A\" : \"AeroClient\");\n\n    useEffect(() => {\n        window.addEventListener(\"resize\", function () {\n            setLogoText(window.innerWidth < 800 ? \"A\" : \"AeroClient\");\n        });\n    }, []);\n\n    return (\n        <header className=\"header\">\n            <div className=\"logo-container\">\n                <h1 className=\"logo\">\n                    <span className=\"red\">{logoText.slice(0, 4)}</span>\n                    {logoText.slice(4)}\n                </h1>\n            </div>\n            <nav className=\"nav\">\n                <a\n                    href=\"https://github.com/aero-ware/aeroclient\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    className=\"red\"\n                >\n                    <i className=\"fab fa-github\"></i>\n                </a>\n                <a\n                    href=\"https://www.npmjs.com/org/aeroware\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    className=\"red\"\n                >\n                    <i className=\"fab fa-npm fa-1x\"></i>\n                </a>\n                <a\n                    href=\"https://discord.gg/JdTQG3a9Ye\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    className=\"red\"\n                >\n                    <i className=\"fab fa-discord\"></i>\n                </a>\n            </nav>\n        </header>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n","import hljs from \"highlight.js\";\nimport React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport \"./docs.css\";\nimport Header from \"./header/Header\";\nimport \"./hl.css\";\nimport \"./sidebar.css\";\n\nfunction App() {\n    useEffect(() => {\n        hljs.configure({\n            languages: [\"typescript\"],\n        });\n\n        document.querySelectorAll(\"pre code\").forEach((block) => {\n            hljs.highlightBlock(block as HTMLElement);\n        });\n\n        const hash = window.location.hash.slice(1);\n\n        const element = document.getElementById(hash);\n\n        if (element)\n            setImmediate(() =>\n                element.scrollIntoView({\n                    behavior: \"smooth\",\n                    block: \"start\",\n                })\n            );\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <Header />\n            <aside className=\"sidebar\">\n                <div className=\"viewport\">\n                    <main className=\"sidebar-links\">\n                        <a href=\"#welcome\">Welcome</a>\n                        <br />\n                        <a href=\"#documentation\">Documentation</a>\n                        <br />\n                        <div className=\"t\">\n                            <a href=\"#aeroclient\">AeroClient</a>\n                            <br />\n                            <div className=\"t\">\n                                <a href=\"#options\">Options</a>\n                                <br />\n                                <a href=\"#properties\">Properties</a>\n                                <br />\n                                <a href=\"#methods\">Methods</a>\n                                <br />\n                                <a href=\"#middleware\">Middleware</a>\n                                <br />\n                            </div>\n                            <a href=\"#command\">Command</a>\n                            <br />\n                            <a href=\"#usage\">Usage</a>\n                            <div className=\"t\">\n                                <a href=\"#commands\">Commands</a>\n                                <br />\n                                <a href=\"#events\">Events</a>\n                                <br />\n                                <a href=\"#messages\">Messages</a>\n                                <br />\n                                <a href=\"#locales\">Locales</a>\n                            </div>\n                            <a href=\"#logger\">Logger</a>\n                            <br />\n                            <div className=\"t\">\n                                <a href=\"#logger-methods\">Methods</a>\n                                <br />\n                            </div>\n                            <a href=\"#utils\">utils</a>\n                            <br />\n                            <div className=\"t\">\n                                <a href=\"#input\">Input</a>\n                                <br />\n                                <a href=\"#parsing\">Parsing</a>\n                                <br />\n                                <a href=\"#timing\">Timing</a>\n                                <br />\n                                <div className=\"t\">\n                                    <a href=\"#stopwatch\">Stopwatch</a>\n                                    <div className=\"t\">\n                                        <a href=\"#stopwatch-properties\">Properties</a>\n                                        <br />\n                                        <a href=\"#stopwatch-methods\">Methods</a>\n                                    </div>\n                                </div>\n                                <a href=\"#pagination\">Pagination</a>\n                                <br />\n                                <div className=\"t\">\n                                    <a href=\"#pagination-options\">Options</a>\n                                </div>\n                            </div>\n                        </div>\n                    </main>\n                </div>\n            </aside>\n            <article className=\"docs\">\n                <div className=\"viewport\">\n                    <div>\n                        <div className=\"welcome\">\n                            <h2>\n                                <a id=\"welcome\" href=\"#welcome\">\n                                    #\n                                </a>{\" \"}\n                                Welcome!\n                            </h2>\n                            <p>\n                                Welcome to the AeroClient v1 documentation.\n                                <br />\n                                <a href=\"#documentation\" className=\"red\">\n                                    Click here skip the welcome section.\n                                </a>\n                            </p>\n                            <h3>About</h3>\n                            <p>\n                                AeroClient is a discord.js framework that focuses on customization.\n                                <br />\n                                It is fully customizable due to the many options and flags you can set.\n                                <br />\n                                AeroClient also features something new in discord.js frameworks: middleware.\n                            </p>\n                            <p>In short, AeroClient is</p>\n                            <ul>\n                                <li>modular;</li>\n                                <li>performant;</li>\n                                <li>flexible;</li>\n                                <li>and easy to use.</li>\n                            </ul>\n                            <p>Also, since AeroClient is written in TypeScript, it provides it's own typings.</p>\n                            <h3>Example (using ES6 import/export)</h3>\n                            <pre>\n                                <code>\n                                    {`\\\nimport AeroClient from \"@aeroware/aeroclient\";\n\n// create a client with default settings and commands\nconst client = new AeroClient({\n    token: \"token\",\n    prefix: \"prefix\",\n    useDefaults: true,\n    logging: true,\n});`}\n                                </code>\n                            </pre>\n                            <h3>Included Packages</h3>\n                            <p>\n                                <a href=\"http://npmjs.com/package/@aeroware/logger\" target=\"_blank\" rel=\"noreferrer\" className=\"red\">\n                                    @aeroware/logger\n                                </a>\n                                <br />\n                                AeroWare's own extremely minimal logging utility.\n                            </p>\n                            <p>\n                                <a href=\"http://npmjs.com/package/@aeroware/discord-utils\" target=\"_blank\" rel=\"noreferrer\" className=\"red\">\n                                    @aeroware/discord-utils\n                                </a>\n                                <br />\n                                AeroWare's small package that contains many utilities for discord.js\n                            </p>\n                            <p>\n                                <a href=\"http://npmjs.com/package/date-fns\" target=\"_blank\" rel=\"noreferrer\" className=\"red\">\n                                    date-fns\n                                </a>\n                                <br />A formatting utility for dates and time.\n                            </p>\n                            <p>\n                                <a href=\"http://npmjs.com/package/ms\" target=\"_blank\" rel=\"noreferrer\" className=\"red\">\n                                    ms\n                                </a>\n                                <br />A small utility to convert strings to milliseconds and back.\n                            </p>\n                            <p>\n                                <a href=\"http://npmjs.com/package/keyv\" target=\"_blank\" rel=\"noreferrer\" className=\"red\">\n                                    keyv\n                                </a>\n                                <br />A key-value based in-memory storage that can be persistent.\n                            </p>\n                        </div>\n                        <div className=\"documentation\">\n                            <h2>\n                                <a id=\"documentation\" href=\"#documentation\" className=\"red\">\n                                    #\n                                </a>{\" \"}\n                                Documentation\n                            </h2>\n                            <h3>\n                                <a id=\"aeroclient\" href=\"#aeroclient\" className=\"red\">\n                                    #\n                                </a>{\" \"}\n                                AeroClient\n                            </h3>\n                            <h4>Constructor</h4>\n                            <p>\n                                The constructor takes two arguments: AeroClient options, and{\" \"}\n                                <a href=\"https://discord.js.org/#/docs/main/stable/class/Client\">Client</a> options.\n                                <br />\n                                It's less confusing and easy to manage.\n                            </p>\n                            <pre>\n                                <code>\n                                    {`\\\nnew AeroClient(clientOptions, options);\n`}\n                                </code>\n                            </pre>\n                            <span className=\"red\">@param</span> <code>clientOptions</code> – AeroClient options\n                            <br />\n                            <span className=\"red\">@param</span> <code>options</code> –{\" \"}\n                            <a href=\"https://discord.js.org/#/docs/main/stable/class/Client\">Client</a> options\n                            <h4 id=\"options\">AeroClientOptions</h4>\n                            <p>\n                                Keep in mind that all of these are <em>optional</em>, but some of them are recommended.\n                            </p>\n                            <ul>\n                                <li>\n                                    <code>token</code> – The client's token\n                                </li>\n                                <li>\n                                    <code>prefix</code> – The client's prefix\n                                </li>\n                                <li>\n                                    <code>logging</code> – Flag to enable logging\n                                </li>\n                                <li>\n                                    <code>loggerHeader</code> – The client's logger's header\n                                </li>\n                                <li>\n                                    <code>loggerShowFlags</code> – Recommended if your terminal doesn't have colors\n                                </li>\n                                <li>\n                                    <code>commandsPath</code> – Path where all your command files are found\n                                </li>\n                                <li>\n                                    <code>eventsPath</code> – Path where all your event files are found\n                                </li>\n                                <li>\n                                    <code>messagesPath</code> – Path where your predefined custom response messages are\n                                </li>\n                                <li>\n                                    <code>languagesPath</code> – Path where your predefined translated messages are\n                                </li>\n                                <li>\n                                    <code>connectionUri</code> – A uri to connect to your database so AeroClient can store data\n                                </li>\n                                <li>\n                                    <code>useDefaults</code> – Flag to enable default commands and settings\n                                </li>\n                                <li>\n                                    <code>persistentCooldowns</code> – Flag to enable persistent cooldowns\n                                </li>\n                                <li>\n                                    <code>responses</code> – Response info\n                                </li>\n                                <ul>\n                                    <li>\n                                        <code>cooldown</code> – Reponse to send when the command is on cooldown\n                                    </li>\n                                    <li>\n                                        <code>error</code> – Response to send when an error occurs\n                                    </li>\n                                    <li>\n                                        <code>usage</code> – Response to send when the usage is incorrect\n                                    </li>\n                                    <li>\n                                        <code>nsfw</code> – Response to send when an NSFW command is used in a SFW channel\n                                    </li>\n                                    <li>\n                                        <code>guild</code> – Response to send when a guild only command is used in a direct message\n                                    </li>\n                                    <li>\n                                        <code>dm</code> – Response to send when a dn only command is used in a guild\n                                    </li>\n                                    <li>\n                                        <code>staff</code> – Response to send when a non-staff user attempts to use a staff only command\n                                    </li>\n                                </ul>\n                                <li>\n                                    <code>staff</code> – Array of strings of staff ids\n                                </li>\n                                <li>\n                                    <code>customHandler</code> – A callback to use instead of our command handler\n                                </li>\n                                <li>\n                                    <code>readyCallback</code> – A callback to use instead of our ready event callback\n                                </li>\n                            </ul>\n                            <h4>ClientOptions</h4>\n                            <p>\n                                View the discord.js docs <a href=\"https://discord.js.org/#/docs/main/stable/typedef/ClientOptions\">here</a>.\n                            </p>\n                            <h4 id=\"properties\">Properties</h4>\n                            <ul>\n                                <li>\n                                    <code>commands</code> – Collection of all stored commands\n                                </li>\n                                <li>\n                                    <code>logger</code> – Logger used to log events\n                                </li>\n                                <li>\n                                    <code>prefixes</code> – Keyv that stores prefixes for each guild\n                                </li>\n                                <li>\n                                    <code>clientOptions</code> – The client options that were passed into the constructor\n                                </li>\n                                <li>\n                                    <code>localeStore</code> – Stored locales for each user\n                                </li>\n                                <li>\n                                    <code>locales</code> – Stored translated resopnses\n                                </li>\n                            </ul>\n                            <h4 id=\"methods\">Methods</h4>\n                            <pre>\n                                <code>{`\\\nregisterCommand(command)\n`}</code>\n                            </pre>\n                            <p>\n                                Registers a command object into the client's <code>commands</code> property.\n                            </p>\n                            <span className=\"red\">@param</span> <code>command</code> – Command object to register\n                            <br />\n                            <br />\n                            <br />\n                            <pre>\n                                <code>{`\\\nloadCommands(directory)\n`}</code>\n                            </pre>\n                            <p>Registers all commands in a directory.</p>\n                            <span className=\"red\">@param</span> <code>directory</code> – Directory to load\n                            <br />\n                            <br />\n                            <br />\n                            <pre>\n                                <code>{`\\\nloadEvents(directory)\n`}</code>\n                            </pre>\n                            <p>Registers all events in a directory.</p>\n                            <span className=\"red\">@param</span> <code>directory</code> – Directory to load\n                            <br />\n                            <br />\n                            <br />\n                            <pre>\n                                <code>{`\\\nloadMessages(directory)\n`}</code>\n                            </pre>\n                            <p>Loads a JSON file with the custom messages.</p>\n                            <span className=\"red\">@param</span> <code>path</code> – Path to the JSON file\n                            <br />\n                            <br />\n                            <br />\n                            <pre>\n                                <code>{`\\\nloadLocales(directory)\n`}</code>\n                            </pre>\n                            <p>Registers all locales in a directory.</p>\n                            <span className=\"red\">@param</span> <code>directory</code> – Directory to load\n                            <br />\n                            <br />\n                            <br />\n                            <pre>\n                                <code>{`\\\npaginate(message, pages, options)\n`}</code>\n                            </pre>\n                            <p>\n                                The docs for this method are <a href=\"#pagination\">here</a>.\n                            </p>\n                            <h4 id=\"middleware\">Middleware</h4>\n                            <p>\n                                AeroClient introduces something new in discord.js frameworks.\n                                <br />\n                                This something new is called middleware. If you have used express you may know what it is,\n                                <br />\n                                but if you don't, we will explain.\n                                <br />\n                                Middleware in our framework refers to a function that runs right before command execution.\n                                <br />\n                                They are also is executed in the order you used them, and they change AeroClient's behaviour.\n                            </p>\n                            <p>First, let's see the method to use middleware.</p>\n                            <pre>\n                                <code>{`\\\nuse(middleware)\n`}</code>\n                            </pre>\n                            <p>Applies middleware to the client.</p>\n                            <span className=\"red\">@param</span> <code>middleware</code> – The middleware function\n                            <br />\n                            <p>\n                                The middleware function will get two parameters.\n                                <br />\n                                The first is the context object and the second is a function.\n                            </p>\n                            <pre>\n                                <code>{`\\\nclient.use(({ message }, next) => {\n    if (message.content.includes(\"some bad word\")) {\n        message.reply(\"no u\");\n        next(true);\n    }\n});\n`}</code>\n                            </pre>\n                            <p>The context object has three properties. The message, the arguments for the command, and the command object itself.</p>\n                            <p>\n                                Calling the next function without any parameters will allow other middleware to execute, like express.\n                                <br />\n                                However, if you pass in <code>true</code>, the middleware stops command execution as well.\n                            </p>\n                            <p>\n                                In the above example, if a message contains <code>some bad word</code>, the client will reply <code>no u</code> and stop command\n                                execution.\n                                <br />\n                                This means that even if the user used <code>!help some bad word</code>, the client will not execute the help command.\n                            </p>\n                            <h3 id=\"command\">The Command type</h3>\n                            <h4>Properties</h4>\n                            <ul>\n                                <li>\n                                    <code>name</code> – Name of the command\n                                </li>\n                                <li>\n                                    <code>aliases</code> – Aliases of the command\n                                </li>\n                                <li>\n                                    <code>category</code> – The command's category\n                                </li>\n                                <li>\n                                    <code>args</code> – If arguments are required\n                                </li>\n                                <li>\n                                    <code>minArgs</code> – Minimum amount of arguments required\n                                </li>\n                                <li>\n                                    <code>maxArgs</code> – Maximum amount of arguments required\n                                </li>\n                                <li>\n                                    <code>usage</code> – The command's usage\n                                </li>\n                                <li>\n                                    <code>cooldown</code> – Cooldown in seconds\n                                </li>\n                                <li>\n                                    <code>description</code> – Short description of the command\n                                </li>\n                                <li>\n                                    <code>details</code> – Long description of the command\n                                </li>\n                                <li>\n                                    <code>guildOnly</code> – If the command can only be executed in a guild\n                                </li>\n                                <li>\n                                    <code>staffOnly</code> – If the command can only be executed by staff\n                                </li>\n                                <li>\n                                    <code>dmOnly</code> – If the command can only be executed in a direct message\n                                </li>\n                                <li>\n                                    <code>nsfw</code> – If the command can only be executed in an NSFW channel\n                                </li>\n                                <li>\n                                    <code>hidden</code> – If the command should be hidden from the default help command\n                                </li>\n                            </ul>\n                            <h4>Methods</h4>\n                            <pre>\n                                <code>{`\\\ncallback(context)\n`}</code>\n                            </pre>\n                            <p>The callback takes one parameter, the context object. Its properties are listed below.</p>\n                            <ul>\n                                <li>\n                                    <code>message</code> – The message obejct from the message event\n                                </li>\n                                <li>\n                                    <code>args</code> – The arguments for the command\n                                </li>\n                                <li>\n                                    <code>client</code> – The AeroClient instance\n                                </li>\n                                <li>\n                                    <code>text</code> – Full message content. Same as <code>message.content</code>.\n                                </li>\n                            </ul>\n                            <span className=\"red\">@param</span> <code>context</code> – The context object\n                            <br />\n                            <h3 id=\"usage\">Usage</h3>\n                            <h4 id=\"commands\">Commands</h4>\n                            <p>\n                                AeroClient supports two ways for declaring commands.\n                                <br />\n                                The first way we shall look at is <code>client.registerCommand</code>\n                            </p>\n                            <pre>\n                                <code>{`\\\nclient.registerCommand({\n    name: \"hello\",\n    callback({ message }) {\n        message.reply(\"hi!\");\n    }\n})\n`}</code>\n                            </pre>\n                            <p>You can also wrap it in a function and export it from another file.</p>\n                            <pre>\n                                <code>{`\\\nmodule.exports = (client) => {\n    client.registerCommand({\n        name: \"hello\",\n        callback({ message }) {\n            message.reply(\"hi!\");\n        }\n    })\n}\n`}</code>\n                            </pre>\n                            <p>Or export the command object itself.</p>\n                            <pre>\n                                <code>{`\\\nmodule.exports = {\n    name: \"hello\",\n    callback({ message }) {\n        message.reply(\"hi!\");\n    }\n}\n`}</code>\n                            </pre>\n                            <p>Generally the second method is preferred since it is more concise.</p>\n                            <h4 id=\"events\">Events</h4>\n                            <p>AeroClient also supports individual event files.</p>\n                            <p>In each file, there should be one export. An example is show below.</p>\n                            <pre>\n                                <code>{`\\\nmodule.exports = {\n    name: \"guildMemberAdd\",\n    once: false,\n    callback(member) {\n        member.user.send(\"hello\");\n    }\n}\n`}</code>\n                            </pre>\n                            <p>There are three properties. The name, whether if should execute once, and finally, the callback to execute.</p>\n                            <h4 id=\"messages\">Messages</h4>\n                            <p>AeroClient allows you to configure response messages with a JSON file.</p>\n                            <p>\n                                Simple add the path to the JSON file in as the <code>messagesPath</code> option.\n                            </p>\n                            <h4 id=\"locales\">Locales and translated responses</h4>\n                            <p>\n                                AeroClient supports a number of locales.\n                                <br />\n                                Your translated messages should be contained in a JSON file with the locale as the name.\n                                <br />\n                                For example, a JSON file with French translations would be named <code>fr.json</code>.\n                                <br />\n                                AeroClient will automatically load all support locales if you add the <code>languagesPath</code> option.\n                            </p>\n                            <h3 id=\"logger\">Logger</h3>\n                            <p>\n                                The Logger class is a simple logger that can be configured easily.\n                                <br />\n                                Logger instances only have methods and do not have properties.\n                            </p>\n                            <h4>Constructor</h4>\n                            <pre>\n                                <code>{`\\\nnew Logger(header, showFlags)\n`}</code>\n                                <span className=\"red\">@param</span> <code>header</code> – Custom header for the logger. Defaults to <code>logger</code>.\n                                <span className=\"red\">@param</span> <code>showFlags</code> – Flag to show flags or not.\n                            </pre>\n                            <h4 id=\"logger-methods\">Methods</h4>\n                            <pre>\n                                <code>{`\\\nsuccess(message)\n`}</code>\n                            </pre>\n                            <p>Logs a message in green.</p>\n                            <span className=\"red\">@param</span> <code>message</code> – Message to log\n                            <br />\n                            <br />\n                            <br />\n                            <pre>\n                                <code>{`\\\ninfo(message)\n`}</code>\n                            </pre>\n                            <p>Logs a message in blue.</p>\n                            <span className=\"red\">@param</span> <code>message</code> – Message to log\n                            <br />\n                            <br />\n                            <br />\n                            <pre>\n                                <code>{`\\\nwarn(message)\n`}</code>\n                            </pre>\n                            <p>Logs a message in yellow.</p>\n                            <span className=\"red\">@param</span> <code>message</code> – Message to log\n                            <br />\n                            <br />\n                            <br />\n                            <pre>\n                                <code>{`\\\nerror(message)\n`}</code>\n                            </pre>\n                            <p>Logs a message in red.</p>\n                            <span className=\"red\">@param</span> <code>message</code> – Message to log\n                            <br />\n                            <h3 id=\"utils\">utils – Coming soon!</h3>\n                            <h4 id=\"input\">Input</h4>\n                            <h4 id=\"parsing\">Parsing</h4>\n                            <h4 id=\"timing\">Timing</h4>\n                            <h4 id=\"pagination\">Pagination</h4>\n                        </div>\n                        <div\n                            className=\"footer\"\n                            id=\"footer\"\n                            style={{\n                                opacity: 0.5,\n                                fontSize: \"1rem\",\n                                paddingTop: \"2rem\",\n                            }}\n                        >\n                            Copyright 2021 &copy; AeroWare\n                        </div>\n                    </div>\n                </div>\n            </article>\n        </div>\n    );\n}\n\nexport default App;\n"],"sourceRoot":""}